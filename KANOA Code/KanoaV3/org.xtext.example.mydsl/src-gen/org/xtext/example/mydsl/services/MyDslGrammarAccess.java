/*
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ProblemSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ProblemSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProblemSpecificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cWorldModelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cWorldModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWorldModelWorldModelParserRuleCall_4_0 = (RuleCall)cWorldModelAssignment_4.eContents().get(0);
		private final Assignment cWorldModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWorldModelWorldModelParserRuleCall_5_0 = (RuleCall)cWorldModelAssignment_5.eContents().get(0);
		private final Keyword cTasksModelKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTasksModelAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTasksModelTasksModelParserRuleCall_8_0 = (RuleCall)cTasksModelAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cTasksModelAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cTasksModelTasksModelParserRuleCall_9_1_0 = (RuleCall)cTasksModelAssignment_9_1.eContents().get(0);
		private final Keyword cRobotsModelKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cRobotsModelAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cRobotsModelRobotParserRuleCall_12_0 = (RuleCall)cRobotsModelAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cRobotsModelAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cRobotsModelRobotParserRuleCall_13_1_0 = (RuleCall)cRobotsModelAssignment_13_1.eContents().get(0);
		private final Keyword cMissionKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cMissionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cMissionMissionParserRuleCall_16_0 = (RuleCall)cMissionAssignment_16.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cCommaKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cMissionAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cMissionMissionParserRuleCall_17_1_0 = (RuleCall)cMissionAssignment_17_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//ProblemSpecification returns ProblemSpecification:
		//    'ProblemSpecification'
		//    '{'
		//        'WorldModel' ':' worldModel+=WorldModel ( worldModel+=WorldModel)*
		//        'TasksModel' ':' tasksModel+=TasksModel ( "," tasksModel+=TasksModel)*
		//        'RobotsModel' ':' robotsModel+=Robot ( "," robotsModel+=Robot)*
		//        'Mission' ':' mission+=Mission ( "," mission+=Mission)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ProblemSpecification'
		//'{'
		//    'WorldModel' ':' worldModel+=WorldModel ( worldModel+=WorldModel)*
		//    'TasksModel' ':' tasksModel+=TasksModel ( "," tasksModel+=TasksModel)*
		//    'RobotsModel' ':' robotsModel+=Robot ( "," robotsModel+=Robot)*
		//    'Mission' ':' mission+=Mission ( "," mission+=Mission)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ProblemSpecification'
		public Keyword getProblemSpecificationKeyword_0() { return cProblemSpecificationKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'WorldModel'
		public Keyword getWorldModelKeyword_2() { return cWorldModelKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//worldModel+=WorldModel
		public Assignment getWorldModelAssignment_4() { return cWorldModelAssignment_4; }
		
		//WorldModel
		public RuleCall getWorldModelWorldModelParserRuleCall_4_0() { return cWorldModelWorldModelParserRuleCall_4_0; }
		
		//( worldModel+=WorldModel)*
		public Assignment getWorldModelAssignment_5() { return cWorldModelAssignment_5; }
		
		//WorldModel
		public RuleCall getWorldModelWorldModelParserRuleCall_5_0() { return cWorldModelWorldModelParserRuleCall_5_0; }
		
		//'TasksModel'
		public Keyword getTasksModelKeyword_6() { return cTasksModelKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//tasksModel+=TasksModel
		public Assignment getTasksModelAssignment_8() { return cTasksModelAssignment_8; }
		
		//TasksModel
		public RuleCall getTasksModelTasksModelParserRuleCall_8_0() { return cTasksModelTasksModelParserRuleCall_8_0; }
		
		//( "," tasksModel+=TasksModel)*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//tasksModel+=TasksModel
		public Assignment getTasksModelAssignment_9_1() { return cTasksModelAssignment_9_1; }
		
		//TasksModel
		public RuleCall getTasksModelTasksModelParserRuleCall_9_1_0() { return cTasksModelTasksModelParserRuleCall_9_1_0; }
		
		//'RobotsModel'
		public Keyword getRobotsModelKeyword_10() { return cRobotsModelKeyword_10; }
		
		//':'
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//robotsModel+=Robot
		public Assignment getRobotsModelAssignment_12() { return cRobotsModelAssignment_12; }
		
		//Robot
		public RuleCall getRobotsModelRobotParserRuleCall_12_0() { return cRobotsModelRobotParserRuleCall_12_0; }
		
		//( "," robotsModel+=Robot)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//robotsModel+=Robot
		public Assignment getRobotsModelAssignment_13_1() { return cRobotsModelAssignment_13_1; }
		
		//Robot
		public RuleCall getRobotsModelRobotParserRuleCall_13_1_0() { return cRobotsModelRobotParserRuleCall_13_1_0; }
		
		//'Mission'
		public Keyword getMissionKeyword_14() { return cMissionKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//mission+=Mission
		public Assignment getMissionAssignment_16() { return cMissionAssignment_16; }
		
		//Mission
		public RuleCall getMissionMissionParserRuleCall_16_0() { return cMissionMissionParserRuleCall_16_0; }
		
		//( "," mission+=Mission)*
		public Group getGroup_17() { return cGroup_17; }
		
		//","
		public Keyword getCommaKeyword_17_0() { return cCommaKeyword_17_0; }
		
		//mission+=Mission
		public Assignment getMissionAssignment_17_1() { return cMissionAssignment_17_1; }
		
		//Mission
		public RuleCall getMissionMissionParserRuleCall_17_1_0() { return cMissionMissionParserRuleCall_17_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class WorldModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.WorldModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLocationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPathsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///// --------- World model
		//WorldModel returns WorldModel:
		//    Location | Paths;
		@Override public ParserRule getRule() { return rule; }
		
		//Location | Paths
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Location
		public RuleCall getLocationParserRuleCall_0() { return cLocationParserRuleCall_0; }
		
		//Paths
		public RuleCall getPathsParserRuleCall_1() { return cPathsParserRuleCall_1; }
	}
	public class LocationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Location");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cXKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXEDoubleParserRuleCall_4_0 = (RuleCall)cXAssignment_4.eContents().get(0);
		private final Keyword cYKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cYAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cYEDoubleParserRuleCall_6_0 = (RuleCall)cYAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cDescribesKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cDescriptionAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_7_2_0 = (RuleCall)cDescriptionAssignment_7_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Location returns Location:
		//    //{Location}
		//    name=EString ':'
		//    '('
		//        'x' x=EDouble
		//        'y' y=EDouble
		//        (',' 'describes' description=EString)?
		//    ')';
		@Override public ParserRule getRule() { return rule; }
		
		////{Location}
		//name=EString ':'
		//'('
		//    'x' x=EDouble
		//    'y' y=EDouble
		//    (',' 'describes' description=EString)?
		//')'
		public Group getGroup() { return cGroup; }
		
		////{Location}
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//'x'
		public Keyword getXKeyword_3() { return cXKeyword_3; }
		
		//x=EDouble
		public Assignment getXAssignment_4() { return cXAssignment_4; }
		
		//EDouble
		public RuleCall getXEDoubleParserRuleCall_4_0() { return cXEDoubleParserRuleCall_4_0; }
		
		//'y'
		public Keyword getYKeyword_5() { return cYKeyword_5; }
		
		//y=EDouble
		public Assignment getYAssignment_6() { return cYAssignment_6; }
		
		//EDouble
		public RuleCall getYEDoubleParserRuleCall_6_0() { return cYEDoubleParserRuleCall_6_0; }
		
		//(',' 'describes' description=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//'describes'
		public Keyword getDescribesKeyword_7_1() { return cDescribesKeyword_7_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_7_2() { return cDescriptionAssignment_7_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_7_2_0() { return cDescriptionEStringParserRuleCall_7_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}
	public class PathsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Paths");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDistanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLoc1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cLoc1LocationCrossReference_1_0 = (CrossReference)cLoc1Assignment_1.eContents().get(0);
		private final RuleCall cLoc1LocationEStringParserRuleCall_1_0_1 = (RuleCall)cLoc1LocationCrossReference_1_0.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLoc2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLoc2LocationCrossReference_3_0 = (CrossReference)cLoc2Assignment_3.eContents().get(0);
		private final RuleCall cLoc2LocationEStringParserRuleCall_3_0_1 = (RuleCall)cLoc2LocationCrossReference_3_0.eContents().get(1);
		private final Keyword cIsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDistanceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDistanceEDoubleParserRuleCall_5_0 = (RuleCall)cDistanceAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cHasKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cSuccessKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cRateKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cSuccessAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cSuccessEDoubleParserRuleCall_6_3_0 = (RuleCall)cSuccessAssignment_6_3.eContents().get(0);
		private final Keyword cPercentSignKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		
		//Paths returns Paths:
		//    //{Paths}
		//    'distance'
		//        loc1=[Location|EString] 'to'
		//        loc2=[Location|EString]
		//        'is' distance=EDouble
		//        ('has''success''rate:' success=EDouble '%')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////{Paths}
		//'distance'
		//    loc1=[Location|EString] 'to'
		//    loc2=[Location|EString]
		//    'is' distance=EDouble
		//    ('has''success''rate:' success=EDouble '%')?
		public Group getGroup() { return cGroup; }
		
		////{Paths}
		//'distance'
		public Keyword getDistanceKeyword_0() { return cDistanceKeyword_0; }
		
		//loc1=[Location|EString]
		public Assignment getLoc1Assignment_1() { return cLoc1Assignment_1; }
		
		//[Location|EString]
		public CrossReference getLoc1LocationCrossReference_1_0() { return cLoc1LocationCrossReference_1_0; }
		
		//EString
		public RuleCall getLoc1LocationEStringParserRuleCall_1_0_1() { return cLoc1LocationEStringParserRuleCall_1_0_1; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//loc2=[Location|EString]
		public Assignment getLoc2Assignment_3() { return cLoc2Assignment_3; }
		
		//[Location|EString]
		public CrossReference getLoc2LocationCrossReference_3_0() { return cLoc2LocationCrossReference_3_0; }
		
		//EString
		public RuleCall getLoc2LocationEStringParserRuleCall_3_0_1() { return cLoc2LocationEStringParserRuleCall_3_0_1; }
		
		//'is'
		public Keyword getIsKeyword_4() { return cIsKeyword_4; }
		
		//distance=EDouble
		public Assignment getDistanceAssignment_5() { return cDistanceAssignment_5; }
		
		//EDouble
		public RuleCall getDistanceEDoubleParserRuleCall_5_0() { return cDistanceEDoubleParserRuleCall_5_0; }
		
		//('has''success''rate:' success=EDouble '%')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'has'
		public Keyword getHasKeyword_6_0() { return cHasKeyword_6_0; }
		
		//'success'
		public Keyword getSuccessKeyword_6_1() { return cSuccessKeyword_6_1; }
		
		//'rate:'
		public Keyword getRateKeyword_6_2() { return cRateKeyword_6_2; }
		
		//success=EDouble
		public Assignment getSuccessAssignment_6_3() { return cSuccessAssignment_6_3; }
		
		//EDouble
		public RuleCall getSuccessEDoubleParserRuleCall_6_3_0() { return cSuccessEDoubleParserRuleCall_6_3_0; }
		
		//'%'
		public Keyword getPercentSignKeyword_6_4() { return cPercentSignKeyword_6_4; }
	}
	public class TasksModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TasksModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAtomicTaskParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompoundTaskParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///// --------- Tasks
		//TasksModel returns TasksModel:
		//    AtomicTask | CompoundTask;
		@Override public ParserRule getRule() { return rule; }
		
		//AtomicTask | CompoundTask
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AtomicTask
		public RuleCall getAtomicTaskParserRuleCall_0() { return cAtomicTaskParserRuleCall_0; }
		
		//CompoundTask
		public RuleCall getCompoundTaskParserRuleCall_1() { return cCompoundTaskParserRuleCall_1; }
	}
	public class AtomicTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AtomicTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRobotsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRobotsEIntParserRuleCall_2_0 = (RuleCall)cRobotsAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cRobotsKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cRobotKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final Keyword cNeededKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAtKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLocationKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLocAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cLocLocationCrossReference_5_2_0 = (CrossReference)cLocAssignment_5_2.eContents().get(0);
		private final RuleCall cLocLocationEStringParserRuleCall_5_2_0_1 = (RuleCall)cLocLocationCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRetryAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRetryEIntParserRuleCall_6_1_0 = (RuleCall)cRetryAssignment_6_1.eContents().get(0);
		private final Keyword cRetriesKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cAllowedKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//AtomicTask returns AtomicTask:
		//    //{AtomicTask}
		//    name=EString ':'
		//    robots=EInt ('robots'|'robot') 'needed'
		//    ('at' 'location'
		//    loc=[Location|EString])?
		//    (',' retry=EInt 'retries''allowed')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////{AtomicTask}
		//name=EString ':'
		//robots=EInt ('robots'|'robot') 'needed'
		//('at' 'location'
		//loc=[Location|EString])?
		//(',' retry=EInt 'retries''allowed')?
		public Group getGroup() { return cGroup; }
		
		////{AtomicTask}
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//robots=EInt
		public Assignment getRobotsAssignment_2() { return cRobotsAssignment_2; }
		
		//EInt
		public RuleCall getRobotsEIntParserRuleCall_2_0() { return cRobotsEIntParserRuleCall_2_0; }
		
		//('robots'|'robot')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'robots'
		public Keyword getRobotsKeyword_3_0() { return cRobotsKeyword_3_0; }
		
		//'robot'
		public Keyword getRobotKeyword_3_1() { return cRobotKeyword_3_1; }
		
		//'needed'
		public Keyword getNeededKeyword_4() { return cNeededKeyword_4; }
		
		//('at' 'location'
		//loc=[Location|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'at'
		public Keyword getAtKeyword_5_0() { return cAtKeyword_5_0; }
		
		//'location'
		public Keyword getLocationKeyword_5_1() { return cLocationKeyword_5_1; }
		
		//loc=[Location|EString]
		public Assignment getLocAssignment_5_2() { return cLocAssignment_5_2; }
		
		//[Location|EString]
		public CrossReference getLocLocationCrossReference_5_2_0() { return cLocLocationCrossReference_5_2_0; }
		
		//EString
		public RuleCall getLocLocationEStringParserRuleCall_5_2_0_1() { return cLocLocationEStringParserRuleCall_5_2_0_1; }
		
		//(',' retry=EInt 'retries''allowed')?
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//retry=EInt
		public Assignment getRetryAssignment_6_1() { return cRetryAssignment_6_1; }
		
		//EInt
		public RuleCall getRetryEIntParserRuleCall_6_1_0() { return cRetryEIntParserRuleCall_6_1_0; }
		
		//'retries'
		public Keyword getRetriesKeyword_6_2() { return cRetriesKeyword_6_2; }
		
		//'allowed'
		public Keyword getAllowedKeyword_6_3() { return cAllowedKeyword_6_3; }
	}
	public class CompoundTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.CompoundTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSubtasksKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCanDoTaskAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cCanDoTaskTasksModelCrossReference_4_0_0 = (CrossReference)cCanDoTaskAssignment_4_0.eContents().get(0);
		private final RuleCall cCanDoTaskTasksModelEStringParserRuleCall_4_0_0_1 = (RuleCall)cCanDoTaskTasksModelCrossReference_4_0_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCanDoTaskAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final CrossReference cCanDoTaskTasksModelCrossReference_4_1_1_0 = (CrossReference)cCanDoTaskAssignment_4_1_1.eContents().get(0);
		private final RuleCall cCanDoTaskTasksModelEStringParserRuleCall_4_1_1_0_1 = (RuleCall)cCanDoTaskTasksModelCrossReference_4_1_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Keyword cConstraintKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cOrderedAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final Keyword cOrderedOrderedKeyword_6_0_1_0 = (Keyword)cOrderedAssignment_6_0_1.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cConstraintKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cConsecutiveAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final Keyword cConsecutiveConsecutiveKeyword_6_1_1_0 = (Keyword)cConsecutiveAssignment_6_1_1.eContents().get(0);
		
		//CompoundTask returns CompoundTask:
		//    //{CompoundTask}
		//    name=EString ':'
		//    'subtasks'
		//    '['
		//        (canDoTask+=[TasksModel|EString] ( "," canDoTask+=[TasksModel|EString])* )?
		//    ']'
		//    ('constraint:' ordered?='ordered' | 'constraint:' consecutive?='consecutive')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////{CompoundTask}
		//name=EString ':'
		//'subtasks'
		//'['
		//    (canDoTask+=[TasksModel|EString] ( "," canDoTask+=[TasksModel|EString])* )?
		//']'
		//('constraint:' ordered?='ordered' | 'constraint:' consecutive?='consecutive')?
		public Group getGroup() { return cGroup; }
		
		////{CompoundTask}
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'subtasks'
		public Keyword getSubtasksKeyword_2() { return cSubtasksKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(canDoTask+=[TasksModel|EString] ( "," canDoTask+=[TasksModel|EString])* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//canDoTask+=[TasksModel|EString]
		public Assignment getCanDoTaskAssignment_4_0() { return cCanDoTaskAssignment_4_0; }
		
		//[TasksModel|EString]
		public CrossReference getCanDoTaskTasksModelCrossReference_4_0_0() { return cCanDoTaskTasksModelCrossReference_4_0_0; }
		
		//EString
		public RuleCall getCanDoTaskTasksModelEStringParserRuleCall_4_0_0_1() { return cCanDoTaskTasksModelEStringParserRuleCall_4_0_0_1; }
		
		//( "," canDoTask+=[TasksModel|EString])*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//canDoTask+=[TasksModel|EString]
		public Assignment getCanDoTaskAssignment_4_1_1() { return cCanDoTaskAssignment_4_1_1; }
		
		//[TasksModel|EString]
		public CrossReference getCanDoTaskTasksModelCrossReference_4_1_1_0() { return cCanDoTaskTasksModelCrossReference_4_1_1_0; }
		
		//EString
		public RuleCall getCanDoTaskTasksModelEStringParserRuleCall_4_1_1_0_1() { return cCanDoTaskTasksModelEStringParserRuleCall_4_1_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
		
		//('constraint:' ordered?='ordered' | 'constraint:' consecutive?='consecutive')?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//'constraint:' ordered?='ordered'
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'constraint:'
		public Keyword getConstraintKeyword_6_0_0() { return cConstraintKeyword_6_0_0; }
		
		//ordered?='ordered'
		public Assignment getOrderedAssignment_6_0_1() { return cOrderedAssignment_6_0_1; }
		
		//'ordered'
		public Keyword getOrderedOrderedKeyword_6_0_1_0() { return cOrderedOrderedKeyword_6_0_1_0; }
		
		//'constraint:' consecutive?='consecutive'
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'constraint:'
		public Keyword getConstraintKeyword_6_1_0() { return cConstraintKeyword_6_1_0; }
		
		//consecutive?='consecutive'
		public Assignment getConsecutiveAssignment_6_1_1() { return cConsecutiveAssignment_6_1_1; }
		
		//'consecutive'
		public Keyword getConsecutiveConsecutiveKeyword_6_1_1_0() { return cConsecutiveConsecutiveKeyword_6_1_1_0; }
	}
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAtKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInitialKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPositionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInitLocAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cInitLocLocationCrossReference_5_0 = (CrossReference)cInitLocAssignment_5.eContents().get(0);
		private final RuleCall cInitLocLocationEStringParserRuleCall_5_0_1 = (RuleCall)cInitLocLocationCrossReference_5_0.eContents().get(1);
		private final Keyword cHasKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cVelocityKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cVelocityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cVelocityEDoubleParserRuleCall_8_0 = (RuleCall)cVelocityAssignment_8.eContents().get(0);
		private final Keyword cWithKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cCapabilitiesKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cCapabilitiesAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cCapabilitiesCapabilityParserRuleCall_12_0 = (RuleCall)cCapabilitiesAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cCapabilitiesAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cCapabilitiesCapabilityParserRuleCall_13_1_0 = (RuleCall)cCapabilitiesAssignment_13_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		///// ----------- Robots
		//Robot returns Robot:
		//    //{Robot}
		//    name=EString
		//    ':'
		//        'at''initial''position' initLoc=[Location|EString]
		//        'has''velocity' velocity=EDouble
		//        'with''capabilities'
		//        '('
		//            capabilities+=Capability ( "," capabilities+=Capability)*
		//        ')'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////{Robot}
		//name=EString
		//':'
		//    'at''initial''position' initLoc=[Location|EString]
		//    'has''velocity' velocity=EDouble
		//    'with''capabilities'
		//    '('
		//        capabilities+=Capability ( "," capabilities+=Capability)*
		//    ')'
		public Group getGroup() { return cGroup; }
		
		////{Robot}
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'at'
		public Keyword getAtKeyword_2() { return cAtKeyword_2; }
		
		//'initial'
		public Keyword getInitialKeyword_3() { return cInitialKeyword_3; }
		
		//'position'
		public Keyword getPositionKeyword_4() { return cPositionKeyword_4; }
		
		//initLoc=[Location|EString]
		public Assignment getInitLocAssignment_5() { return cInitLocAssignment_5; }
		
		//[Location|EString]
		public CrossReference getInitLocLocationCrossReference_5_0() { return cInitLocLocationCrossReference_5_0; }
		
		//EString
		public RuleCall getInitLocLocationEStringParserRuleCall_5_0_1() { return cInitLocLocationEStringParserRuleCall_5_0_1; }
		
		//'has'
		public Keyword getHasKeyword_6() { return cHasKeyword_6; }
		
		//'velocity'
		public Keyword getVelocityKeyword_7() { return cVelocityKeyword_7; }
		
		//velocity=EDouble
		public Assignment getVelocityAssignment_8() { return cVelocityAssignment_8; }
		
		//EDouble
		public RuleCall getVelocityEDoubleParserRuleCall_8_0() { return cVelocityEDoubleParserRuleCall_8_0; }
		
		//'with'
		public Keyword getWithKeyword_9() { return cWithKeyword_9; }
		
		//'capabilities'
		public Keyword getCapabilitiesKeyword_10() { return cCapabilitiesKeyword_10; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_11() { return cLeftParenthesisKeyword_11; }
		
		//capabilities+=Capability
		public Assignment getCapabilitiesAssignment_12() { return cCapabilitiesAssignment_12; }
		
		//Capability
		public RuleCall getCapabilitiesCapabilityParserRuleCall_12_0() { return cCapabilitiesCapabilityParserRuleCall_12_0; }
		
		//( "," capabilities+=Capability)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//capabilities+=Capability
		public Assignment getCapabilitiesAssignment_13_1() { return cCapabilitiesAssignment_13_1; }
		
		//Capability
		public RuleCall getCapabilitiesCapabilityParserRuleCall_13_1_0() { return cCapabilitiesCapabilityParserRuleCall_13_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_14() { return cRightParenthesisKeyword_14; }
	}
	public class CapabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Capability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAtAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAtAtomicTaskCrossReference_0_0 = (CrossReference)cAtAssignment_0.eContents().get(0);
		private final RuleCall cAtAtomicTaskEStringParserRuleCall_0_0_1 = (RuleCall)cAtAtomicTaskCrossReference_0_0.eContents().get(1);
		private final Keyword cRequiredKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTimeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTimeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeEDoubleParserRuleCall_3_0 = (RuleCall)cTimeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSuccessKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRateKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSuccessAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSuccessEDoubleParserRuleCall_7_0 = (RuleCall)cSuccessAssignment_7.eContents().get(0);
		private final Keyword cPercentSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Capability returns Capability:
		//    //{Capability}
		//    at=[AtomicTask|EString]
		//    '-required''time:' time=EDouble
		//    ',''success''rate:' success=EDouble '%'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////{Capability}
		//at=[AtomicTask|EString]
		//'-required''time:' time=EDouble
		//',''success''rate:' success=EDouble '%'
		public Group getGroup() { return cGroup; }
		
		////{Capability}
		//at=[AtomicTask|EString]
		public Assignment getAtAssignment_0() { return cAtAssignment_0; }
		
		//[AtomicTask|EString]
		public CrossReference getAtAtomicTaskCrossReference_0_0() { return cAtAtomicTaskCrossReference_0_0; }
		
		//EString
		public RuleCall getAtAtomicTaskEStringParserRuleCall_0_0_1() { return cAtAtomicTaskEStringParserRuleCall_0_0_1; }
		
		//'-required'
		public Keyword getRequiredKeyword_1() { return cRequiredKeyword_1; }
		
		//'time:'
		public Keyword getTimeKeyword_2() { return cTimeKeyword_2; }
		
		//time=EDouble
		public Assignment getTimeAssignment_3() { return cTimeAssignment_3; }
		
		//EDouble
		public RuleCall getTimeEDoubleParserRuleCall_3_0() { return cTimeEDoubleParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'success'
		public Keyword getSuccessKeyword_5() { return cSuccessKeyword_5; }
		
		//'rate:'
		public Keyword getRateKeyword_6() { return cRateKeyword_6; }
		
		//success=EDouble
		public Assignment getSuccessAssignment_7() { return cSuccessAssignment_7; }
		
		//EDouble
		public RuleCall getSuccessEDoubleParserRuleCall_7_0() { return cSuccessEDoubleParserRuleCall_7_0; }
		
		//'%'
		public Keyword getPercentSignKeyword_8() { return cPercentSignKeyword_8; }
	}
	public class MissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Mission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMissionTaskAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMissionTaskMissionTaskParserRuleCall_0_0 = (RuleCall)cMissionTaskAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMissionTaskAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMissionTaskMissionTaskParserRuleCall_1_1_0 = (RuleCall)cMissionTaskAssignment_1_1.eContents().get(0);
		private final Keyword cObjectivesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjObjectiveEnumRuleCall_3_0 = (RuleCall)cObjAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cObjAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cObjObjectiveEnumRuleCall_4_1_0 = (RuleCall)cObjAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cConstraintsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cConstraintsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cConstraintsConstraintsParserRuleCall_5_1_0 = (RuleCall)cConstraintsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cConstraintsConstraintsParserRuleCall_5_2_1_0 = (RuleCall)cConstraintsAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cTimeKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cTimeAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cTimeEIntParserRuleCall_6_1_1_0 = (RuleCall)cTimeAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cNumAllocationKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cNumAllocAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cNumAllocEIntParserRuleCall_6_2_1_0 = (RuleCall)cNumAllocAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cPopulationKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cPopulationAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cPopulationEIntParserRuleCall_6_3_1_0 = (RuleCall)cPopulationAssignment_6_3_1.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cEvaluationKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cEvaluationsAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final RuleCall cEvaluationsEIntParserRuleCall_6_4_1_0 = (RuleCall)cEvaluationsAssignment_6_4_1.eContents().get(0);
		
		///// ----------- Missions
		//Mission returns Mission:
		//    missionTask+=MissionTask ( "," missionTask+=MissionTask)*
		//    'objectives:'
		//        obj+=Objective ( "," obj+=Objective)*
		//        //objectives+=Objective ( "," objectives+=Objective)* ;
		//    ('constraints:'
		//        constraints+=Constraints ( "," constraints+=Constraints)*
		//    )?
		//    ('parameters:'
		//        ('time:' time = EInt )?
		//        ('numAllocation:'numAlloc = EInt)?
		//        ('population:' population = EInt)?
		//        ('evaluation:' evaluations = EInt)?
		//    )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//missionTask+=MissionTask ( "," missionTask+=MissionTask)*
		//'objectives:'
		//    obj+=Objective ( "," obj+=Objective)*
		//    //objectives+=Objective ( "," objectives+=Objective)* ;
		//('constraints:'
		//    constraints+=Constraints ( "," constraints+=Constraints)*
		//)?
		//('parameters:'
		//    ('time:' time = EInt )?
		//    ('numAllocation:'numAlloc = EInt)?
		//    ('population:' population = EInt)?
		//    ('evaluation:' evaluations = EInt)?
		//)?
		public Group getGroup() { return cGroup; }
		
		//missionTask+=MissionTask
		public Assignment getMissionTaskAssignment_0() { return cMissionTaskAssignment_0; }
		
		//MissionTask
		public RuleCall getMissionTaskMissionTaskParserRuleCall_0_0() { return cMissionTaskMissionTaskParserRuleCall_0_0; }
		
		//( "," missionTask+=MissionTask)*
		public Group getGroup_1() { return cGroup_1; }
		
		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//missionTask+=MissionTask
		public Assignment getMissionTaskAssignment_1_1() { return cMissionTaskAssignment_1_1; }
		
		//MissionTask
		public RuleCall getMissionTaskMissionTaskParserRuleCall_1_1_0() { return cMissionTaskMissionTaskParserRuleCall_1_1_0; }
		
		//'objectives:'
		public Keyword getObjectivesKeyword_2() { return cObjectivesKeyword_2; }
		
		//obj+=Objective
		public Assignment getObjAssignment_3() { return cObjAssignment_3; }
		
		//Objective
		public RuleCall getObjObjectiveEnumRuleCall_3_0() { return cObjObjectiveEnumRuleCall_3_0; }
		
		//( "," obj+=Objective)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//obj+=Objective
		public Assignment getObjAssignment_4_1() { return cObjAssignment_4_1; }
		
		//Objective
		public RuleCall getObjObjectiveEnumRuleCall_4_1_0() { return cObjObjectiveEnumRuleCall_4_1_0; }
		
		//    //objectives+=Objective ( "," objectives+=Objective)* ;
		//('constraints:'
		//    constraints+=Constraints ( "," constraints+=Constraints)*
		//)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'constraints:'
		public Keyword getConstraintsKeyword_5_0() { return cConstraintsKeyword_5_0; }
		
		//constraints+=Constraints
		public Assignment getConstraintsAssignment_5_1() { return cConstraintsAssignment_5_1; }
		
		//Constraints
		public RuleCall getConstraintsConstraintsParserRuleCall_5_1_0() { return cConstraintsConstraintsParserRuleCall_5_1_0; }
		
		//( "," constraints+=Constraints)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//constraints+=Constraints
		public Assignment getConstraintsAssignment_5_2_1() { return cConstraintsAssignment_5_2_1; }
		
		//Constraints
		public RuleCall getConstraintsConstraintsParserRuleCall_5_2_1_0() { return cConstraintsConstraintsParserRuleCall_5_2_1_0; }
		
		//('parameters:'
		//    ('time:' time = EInt )?
		//    ('numAllocation:'numAlloc = EInt)?
		//    ('population:' population = EInt)?
		//    ('evaluation:' evaluations = EInt)?
		//)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters:'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//('time:' time = EInt )?
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'time:'
		public Keyword getTimeKeyword_6_1_0() { return cTimeKeyword_6_1_0; }
		
		//time = EInt
		public Assignment getTimeAssignment_6_1_1() { return cTimeAssignment_6_1_1; }
		
		//EInt
		public RuleCall getTimeEIntParserRuleCall_6_1_1_0() { return cTimeEIntParserRuleCall_6_1_1_0; }
		
		//('numAllocation:'numAlloc = EInt)?
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//'numAllocation:'
		public Keyword getNumAllocationKeyword_6_2_0() { return cNumAllocationKeyword_6_2_0; }
		
		//numAlloc = EInt
		public Assignment getNumAllocAssignment_6_2_1() { return cNumAllocAssignment_6_2_1; }
		
		//EInt
		public RuleCall getNumAllocEIntParserRuleCall_6_2_1_0() { return cNumAllocEIntParserRuleCall_6_2_1_0; }
		
		//('population:' population = EInt)?
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//'population:'
		public Keyword getPopulationKeyword_6_3_0() { return cPopulationKeyword_6_3_0; }
		
		//population = EInt
		public Assignment getPopulationAssignment_6_3_1() { return cPopulationAssignment_6_3_1; }
		
		//EInt
		public RuleCall getPopulationEIntParserRuleCall_6_3_1_0() { return cPopulationEIntParserRuleCall_6_3_1_0; }
		
		//('evaluation:' evaluations = EInt)?
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//'evaluation:'
		public Keyword getEvaluationKeyword_6_4_0() { return cEvaluationKeyword_6_4_0; }
		
		//evaluations = EInt
		public Assignment getEvaluationsAssignment_6_4_1() { return cEvaluationsAssignment_6_4_1; }
		
		//EInt
		public RuleCall getEvaluationsEIntParserRuleCall_6_4_1_0() { return cEvaluationsEIntParserRuleCall_6_4_1_0; }
	}
	public class MissionTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MissionTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMissionTaskAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cAtomicKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cTaskKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cAtAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final CrossReference cAtAtomicTaskCrossReference_3_0_2_0 = (CrossReference)cAtAssignment_3_0_2.eContents().get(0);
		private final RuleCall cAtAtomicTaskEStringParserRuleCall_3_0_2_0_1 = (RuleCall)cAtAtomicTaskCrossReference_3_0_2_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cCompoundKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cTaskKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cCtAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final CrossReference cCtCompoundTaskCrossReference_3_1_2_0 = (CrossReference)cCtAssignment_3_1_2.eContents().get(0);
		private final RuleCall cCtCompoundTaskEStringParserRuleCall_3_1_2_0_1 = (RuleCall)cCtCompoundTaskCrossReference_3_1_2_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAtKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLocationKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cLocAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cLocLocationCrossReference_4_2_0 = (CrossReference)cLocAssignment_4_2.eContents().get(0);
		private final RuleCall cLocLocationEStringParserRuleCall_4_2_0_1 = (RuleCall)cLocLocationCrossReference_4_2_0.eContents().get(1);
		
		//MissionTask returns MissionTask:
		//    {MissionTask}
		//    name=EString ':'
		//    ('atomic''task' at=[AtomicTask|EString] | 'compound''task' ct=[CompoundTask|EString])
		//    ('at''location' loc=[Location|EString])?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{MissionTask}
		//name=EString ':'
		//('atomic''task' at=[AtomicTask|EString] | 'compound''task' ct=[CompoundTask|EString])
		//('at''location' loc=[Location|EString])?
		public Group getGroup() { return cGroup; }
		
		//{MissionTask}
		public Action getMissionTaskAction_0() { return cMissionTaskAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//('atomic''task' at=[AtomicTask|EString] | 'compound''task' ct=[CompoundTask|EString])
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'atomic''task' at=[AtomicTask|EString]
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'atomic'
		public Keyword getAtomicKeyword_3_0_0() { return cAtomicKeyword_3_0_0; }
		
		//'task'
		public Keyword getTaskKeyword_3_0_1() { return cTaskKeyword_3_0_1; }
		
		//at=[AtomicTask|EString]
		public Assignment getAtAssignment_3_0_2() { return cAtAssignment_3_0_2; }
		
		//[AtomicTask|EString]
		public CrossReference getAtAtomicTaskCrossReference_3_0_2_0() { return cAtAtomicTaskCrossReference_3_0_2_0; }
		
		//EString
		public RuleCall getAtAtomicTaskEStringParserRuleCall_3_0_2_0_1() { return cAtAtomicTaskEStringParserRuleCall_3_0_2_0_1; }
		
		//'compound''task' ct=[CompoundTask|EString]
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'compound'
		public Keyword getCompoundKeyword_3_1_0() { return cCompoundKeyword_3_1_0; }
		
		//'task'
		public Keyword getTaskKeyword_3_1_1() { return cTaskKeyword_3_1_1; }
		
		//ct=[CompoundTask|EString]
		public Assignment getCtAssignment_3_1_2() { return cCtAssignment_3_1_2; }
		
		//[CompoundTask|EString]
		public CrossReference getCtCompoundTaskCrossReference_3_1_2_0() { return cCtCompoundTaskCrossReference_3_1_2_0; }
		
		//EString
		public RuleCall getCtCompoundTaskEStringParserRuleCall_3_1_2_0_1() { return cCtCompoundTaskEStringParserRuleCall_3_1_2_0_1; }
		
		//('at''location' loc=[Location|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'at'
		public Keyword getAtKeyword_4_0() { return cAtKeyword_4_0; }
		
		//'location'
		public Keyword getLocationKeyword_4_1() { return cLocationKeyword_4_1; }
		
		//loc=[Location|EString]
		public Assignment getLocAssignment_4_2() { return cLocAssignment_4_2; }
		
		//[Location|EString]
		public CrossReference getLocLocationCrossReference_4_2_0() { return cLocLocationCrossReference_4_2_0; }
		
		//EString
		public RuleCall getLocLocationEStringParserRuleCall_4_2_0_1() { return cLocLocationEStringParserRuleCall_4_2_0_1; }
	}
	public class ConstraintsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Constraints");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRateSuccParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSpaceXYRobotParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTaskTimeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAllocateTParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cClosestParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMaxTasksParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Constraints returns Constraints:
		//    RateSucc | SpaceXYRobot | TaskTime | AllocateT | Closest | MaxTasks  ;
		@Override public ParserRule getRule() { return rule; }
		
		//RateSucc | SpaceXYRobot | TaskTime | AllocateT | Closest | MaxTasks
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RateSucc
		public RuleCall getRateSuccParserRuleCall_0() { return cRateSuccParserRuleCall_0; }
		
		//SpaceXYRobot
		public RuleCall getSpaceXYRobotParserRuleCall_1() { return cSpaceXYRobotParserRuleCall_1; }
		
		//TaskTime
		public RuleCall getTaskTimeParserRuleCall_2() { return cTaskTimeParserRuleCall_2; }
		
		//AllocateT
		public RuleCall getAllocateTParserRuleCall_3() { return cAllocateTParserRuleCall_3; }
		
		//Closest
		public RuleCall getClosestParserRuleCall_4() { return cClosestParserRuleCall_4; }
		
		//MaxTasks
		public RuleCall getMaxTasksParserRuleCall_5() { return cMaxTasksParserRuleCall_5; }
	}
	public class RateSuccElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RateSucc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRateSuccAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cRateKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cOfKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cSuccessKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cGreaterKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cThanKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cRateSuccAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cRateSuccEDoubleParserRuleCall_1_5_0 = (RuleCall)cRateSuccAssignment_1_5.eContents().get(0);
		
		//RateSucc returns Constraints:
		//    {RateSucc}
		//    ('rate''of''success''greater''than' rateSucc=EDouble)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RateSucc}
		//('rate''of''success''greater''than' rateSucc=EDouble)?
		public Group getGroup() { return cGroup; }
		
		//{RateSucc}
		public Action getRateSuccAction_0() { return cRateSuccAction_0; }
		
		//('rate''of''success''greater''than' rateSucc=EDouble)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'rate'
		public Keyword getRateKeyword_1_0() { return cRateKeyword_1_0; }
		
		//'of'
		public Keyword getOfKeyword_1_1() { return cOfKeyword_1_1; }
		
		//'success'
		public Keyword getSuccessKeyword_1_2() { return cSuccessKeyword_1_2; }
		
		//'greater'
		public Keyword getGreaterKeyword_1_3() { return cGreaterKeyword_1_3; }
		
		//'than'
		public Keyword getThanKeyword_1_4() { return cThanKeyword_1_4; }
		
		//rateSucc=EDouble
		public Assignment getRateSuccAssignment_1_5() { return cRateSuccAssignment_1_5; }
		
		//EDouble
		public RuleCall getRateSuccEDoubleParserRuleCall_1_5_0() { return cRateSuccEDoubleParserRuleCall_1_5_0; }
	}
	public class SpaceXYRobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SpaceXYRobot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cRobotKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cRobotAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final CrossReference cRobotRobotCrossReference_0_0_1_0 = (CrossReference)cRobotAssignment_0_0_1.eContents().get(0);
		private final RuleCall cRobotRobotEStringParserRuleCall_0_0_1_0_1 = (RuleCall)cRobotRobotCrossReference_0_0_1_0.eContents().get(1);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Assignment cAllrobotsAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final Keyword cAllrobotsAllKeyword_0_1_0_0 = (Keyword)cAllrobotsAssignment_0_1_0.eContents().get(0);
		private final Keyword cRobotsKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Keyword cWorkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cInKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCoordinateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCoordinateXYEnumRuleCall_3_0 = (RuleCall)cCoordinateAssignment_3.eContents().get(0);
		private final Assignment cLowerGreaterAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLowerGreaterLowerGreaterEnumRuleCall_4_0 = (RuleCall)cLowerGreaterAssignment_4.eContents().get(0);
		private final Keyword cThanKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValEDoubleParserRuleCall_6_0 = (RuleCall)cValAssignment_6.eContents().get(0);
		
		//SpaceXYRobot returns SpaceXYRobot:
		//    ('robot' robot=[Robot|EString] | allrobots='all''robots' )
		//    'work''in' coordinate=XY
		//    lowerGreater=LowerGreater 'than' val=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//('robot' robot=[Robot|EString] | allrobots='all''robots' )
		//'work''in' coordinate=XY
		//lowerGreater=LowerGreater 'than' val=EDouble
		public Group getGroup() { return cGroup; }
		
		//('robot' robot=[Robot|EString] | allrobots='all''robots' )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'robot' robot=[Robot|EString]
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'robot'
		public Keyword getRobotKeyword_0_0_0() { return cRobotKeyword_0_0_0; }
		
		//robot=[Robot|EString]
		public Assignment getRobotAssignment_0_0_1() { return cRobotAssignment_0_0_1; }
		
		//[Robot|EString]
		public CrossReference getRobotRobotCrossReference_0_0_1_0() { return cRobotRobotCrossReference_0_0_1_0; }
		
		//EString
		public RuleCall getRobotRobotEStringParserRuleCall_0_0_1_0_1() { return cRobotRobotEStringParserRuleCall_0_0_1_0_1; }
		
		//allrobots='all''robots'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//allrobots='all'
		public Assignment getAllrobotsAssignment_0_1_0() { return cAllrobotsAssignment_0_1_0; }
		
		//'all'
		public Keyword getAllrobotsAllKeyword_0_1_0_0() { return cAllrobotsAllKeyword_0_1_0_0; }
		
		//'robots'
		public Keyword getRobotsKeyword_0_1_1() { return cRobotsKeyword_0_1_1; }
		
		//'work'
		public Keyword getWorkKeyword_1() { return cWorkKeyword_1; }
		
		//'in'
		public Keyword getInKeyword_2() { return cInKeyword_2; }
		
		//coordinate=XY
		public Assignment getCoordinateAssignment_3() { return cCoordinateAssignment_3; }
		
		//XY
		public RuleCall getCoordinateXYEnumRuleCall_3_0() { return cCoordinateXYEnumRuleCall_3_0; }
		
		//lowerGreater=LowerGreater
		public Assignment getLowerGreaterAssignment_4() { return cLowerGreaterAssignment_4; }
		
		//LowerGreater
		public RuleCall getLowerGreaterLowerGreaterEnumRuleCall_4_0() { return cLowerGreaterLowerGreaterEnumRuleCall_4_0; }
		
		//'than'
		public Keyword getThanKeyword_5() { return cThanKeyword_5; }
		
		//val=EDouble
		public Assignment getValAssignment_6() { return cValAssignment_6; }
		
		//EDouble
		public RuleCall getValEDoubleParserRuleCall_6_0() { return cValEDoubleParserRuleCall_6_0; }
	}
	public class TaskTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TaskTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cAtomicKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Keyword cTaskKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final Assignment cAtAssignment_0_0_2 = (Assignment)cGroup_0_0.eContents().get(2);
		private final CrossReference cAtAtomicTaskCrossReference_0_0_2_0 = (CrossReference)cAtAssignment_0_0_2.eContents().get(0);
		private final RuleCall cAtAtomicTaskEStringParserRuleCall_0_0_2_0_1 = (RuleCall)cAtAtomicTaskCrossReference_0_0_2_0.eContents().get(1);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Keyword cCompoundKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Keyword cTaskKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cCtAssignment_0_1_2 = (Assignment)cGroup_0_1.eContents().get(2);
		private final CrossReference cCtCompoundTaskCrossReference_0_1_2_0 = (CrossReference)cCtAssignment_0_1_2.eContents().get(0);
		private final RuleCall cCtCompoundTaskEStringParserRuleCall_0_1_2_0_1 = (RuleCall)cCtCompoundTaskCrossReference_0_1_2_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cAlternatives_0.eContents().get(2);
		private final Keyword cMissionKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Keyword cTaskKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Assignment cMtAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final CrossReference cMtMissionTaskCrossReference_0_2_2_0 = (CrossReference)cMtAssignment_0_2_2.eContents().get(0);
		private final RuleCall cMtMissionTaskEStringParserRuleCall_0_2_2_0_1 = (RuleCall)cMtMissionTaskCrossReference_0_2_2_0.eContents().get(1);
		private final Keyword cHasKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStartEndAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStartEndStartEndEnumRuleCall_3_0 = (RuleCall)cStartEndAssignment_3.eContents().get(0);
		private final Keyword cTimeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTimeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTimeEDoubleParserRuleCall_5_0 = (RuleCall)cTimeAssignment_5.eContents().get(0);
		
		//TaskTime returns TaskTime:
		//    ('atomic''task' at=[AtomicTask|EString] |
		//    'compound''task' ct=[CompoundTask|EString] |
		//    'mission''task' mt=[MissionTask|EString])
		//    'has''to' startEnd=StartEnd
		//    'time:' time=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//('atomic''task' at=[AtomicTask|EString] |
		//'compound''task' ct=[CompoundTask|EString] |
		//'mission''task' mt=[MissionTask|EString])
		//'has''to' startEnd=StartEnd
		//'time:' time=EDouble
		public Group getGroup() { return cGroup; }
		
		//('atomic''task' at=[AtomicTask|EString] |
		//'compound''task' ct=[CompoundTask|EString] |
		//'mission''task' mt=[MissionTask|EString])
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'atomic''task' at=[AtomicTask|EString]
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'atomic'
		public Keyword getAtomicKeyword_0_0_0() { return cAtomicKeyword_0_0_0; }
		
		//'task'
		public Keyword getTaskKeyword_0_0_1() { return cTaskKeyword_0_0_1; }
		
		//at=[AtomicTask|EString]
		public Assignment getAtAssignment_0_0_2() { return cAtAssignment_0_0_2; }
		
		//[AtomicTask|EString]
		public CrossReference getAtAtomicTaskCrossReference_0_0_2_0() { return cAtAtomicTaskCrossReference_0_0_2_0; }
		
		//EString
		public RuleCall getAtAtomicTaskEStringParserRuleCall_0_0_2_0_1() { return cAtAtomicTaskEStringParserRuleCall_0_0_2_0_1; }
		
		//'compound''task' ct=[CompoundTask|EString]
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'compound'
		public Keyword getCompoundKeyword_0_1_0() { return cCompoundKeyword_0_1_0; }
		
		//'task'
		public Keyword getTaskKeyword_0_1_1() { return cTaskKeyword_0_1_1; }
		
		//ct=[CompoundTask|EString]
		public Assignment getCtAssignment_0_1_2() { return cCtAssignment_0_1_2; }
		
		//[CompoundTask|EString]
		public CrossReference getCtCompoundTaskCrossReference_0_1_2_0() { return cCtCompoundTaskCrossReference_0_1_2_0; }
		
		//EString
		public RuleCall getCtCompoundTaskEStringParserRuleCall_0_1_2_0_1() { return cCtCompoundTaskEStringParserRuleCall_0_1_2_0_1; }
		
		//'mission''task' mt=[MissionTask|EString]
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'mission'
		public Keyword getMissionKeyword_0_2_0() { return cMissionKeyword_0_2_0; }
		
		//'task'
		public Keyword getTaskKeyword_0_2_1() { return cTaskKeyword_0_2_1; }
		
		//mt=[MissionTask|EString]
		public Assignment getMtAssignment_0_2_2() { return cMtAssignment_0_2_2; }
		
		//[MissionTask|EString]
		public CrossReference getMtMissionTaskCrossReference_0_2_2_0() { return cMtMissionTaskCrossReference_0_2_2_0; }
		
		//EString
		public RuleCall getMtMissionTaskEStringParserRuleCall_0_2_2_0_1() { return cMtMissionTaskEStringParserRuleCall_0_2_2_0_1; }
		
		//'has'
		public Keyword getHasKeyword_1() { return cHasKeyword_1; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//startEnd=StartEnd
		public Assignment getStartEndAssignment_3() { return cStartEndAssignment_3; }
		
		//StartEnd
		public RuleCall getStartEndStartEndEnumRuleCall_3_0() { return cStartEndStartEndEnumRuleCall_3_0; }
		
		//'time:'
		public Keyword getTimeKeyword_4() { return cTimeKeyword_4; }
		
		//time=EDouble
		public Assignment getTimeAssignment_5() { return cTimeAssignment_5; }
		
		//EDouble
		public RuleCall getTimeEDoubleParserRuleCall_5_0() { return cTimeEDoubleParserRuleCall_5_0; }
	}
	public class AllocateTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AllocateT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAllocateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cAtomicKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Keyword cTaskKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cAtAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final CrossReference cAtAtomicTaskCrossReference_1_0_2_0 = (CrossReference)cAtAssignment_1_0_2.eContents().get(0);
		private final RuleCall cAtAtomicTaskEStringParserRuleCall_1_0_2_0_1 = (RuleCall)cAtAtomicTaskCrossReference_1_0_2_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cCompoundKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cTaskKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cCtAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final CrossReference cCtCompoundTaskCrossReference_1_1_2_0 = (CrossReference)cCtAssignment_1_1_2.eContents().get(0);
		private final RuleCall cCtCompoundTaskEStringParserRuleCall_1_1_2_0_1 = (RuleCall)cCtCompoundTaskCrossReference_1_1_2_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cMissionKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Keyword cTaskKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cMtAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final CrossReference cMtMissionTaskCrossReference_1_2_2_0 = (CrossReference)cMtAssignment_1_2_2.eContents().get(0);
		private final RuleCall cMtMissionTaskEStringParserRuleCall_1_2_2_0_1 = (RuleCall)cMtMissionTaskCrossReference_1_2_2_0.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cRobotKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cRobotAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cRobotRobotCrossReference_3_0_1_0 = (CrossReference)cRobotAssignment_3_0_1.eContents().get(0);
		private final RuleCall cRobotRobotEStringParserRuleCall_3_0_1_0_1 = (RuleCall)cRobotRobotCrossReference_3_0_1_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cSingleKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cRobotKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		//AllocateT returns AllocateT:
		//    'allocate'
		//    ('atomic''task' at=[AtomicTask|EString] |
		//    'compound''task' ct=[CompoundTask|EString] |
		//    'mission''task' mt=[MissionTask|EString])
		//    'to'
		//    ('robot' robot=[Robot|EString]| 'single''robot')
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'allocate'
		//('atomic''task' at=[AtomicTask|EString] |
		//'compound''task' ct=[CompoundTask|EString] |
		//'mission''task' mt=[MissionTask|EString])
		//'to'
		//('robot' robot=[Robot|EString]| 'single''robot')
		public Group getGroup() { return cGroup; }
		
		//'allocate'
		public Keyword getAllocateKeyword_0() { return cAllocateKeyword_0; }
		
		//('atomic''task' at=[AtomicTask|EString] |
		//'compound''task' ct=[CompoundTask|EString] |
		//'mission''task' mt=[MissionTask|EString])
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'atomic''task' at=[AtomicTask|EString]
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'atomic'
		public Keyword getAtomicKeyword_1_0_0() { return cAtomicKeyword_1_0_0; }
		
		//'task'
		public Keyword getTaskKeyword_1_0_1() { return cTaskKeyword_1_0_1; }
		
		//at=[AtomicTask|EString]
		public Assignment getAtAssignment_1_0_2() { return cAtAssignment_1_0_2; }
		
		//[AtomicTask|EString]
		public CrossReference getAtAtomicTaskCrossReference_1_0_2_0() { return cAtAtomicTaskCrossReference_1_0_2_0; }
		
		//EString
		public RuleCall getAtAtomicTaskEStringParserRuleCall_1_0_2_0_1() { return cAtAtomicTaskEStringParserRuleCall_1_0_2_0_1; }
		
		//'compound''task' ct=[CompoundTask|EString]
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'compound'
		public Keyword getCompoundKeyword_1_1_0() { return cCompoundKeyword_1_1_0; }
		
		//'task'
		public Keyword getTaskKeyword_1_1_1() { return cTaskKeyword_1_1_1; }
		
		//ct=[CompoundTask|EString]
		public Assignment getCtAssignment_1_1_2() { return cCtAssignment_1_1_2; }
		
		//[CompoundTask|EString]
		public CrossReference getCtCompoundTaskCrossReference_1_1_2_0() { return cCtCompoundTaskCrossReference_1_1_2_0; }
		
		//EString
		public RuleCall getCtCompoundTaskEStringParserRuleCall_1_1_2_0_1() { return cCtCompoundTaskEStringParserRuleCall_1_1_2_0_1; }
		
		//'mission''task' mt=[MissionTask|EString]
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'mission'
		public Keyword getMissionKeyword_1_2_0() { return cMissionKeyword_1_2_0; }
		
		//'task'
		public Keyword getTaskKeyword_1_2_1() { return cTaskKeyword_1_2_1; }
		
		//mt=[MissionTask|EString]
		public Assignment getMtAssignment_1_2_2() { return cMtAssignment_1_2_2; }
		
		//[MissionTask|EString]
		public CrossReference getMtMissionTaskCrossReference_1_2_2_0() { return cMtMissionTaskCrossReference_1_2_2_0; }
		
		//EString
		public RuleCall getMtMissionTaskEStringParserRuleCall_1_2_2_0_1() { return cMtMissionTaskEStringParserRuleCall_1_2_2_0_1; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//('robot' robot=[Robot|EString]| 'single''robot')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'robot' robot=[Robot|EString]
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'robot'
		public Keyword getRobotKeyword_3_0_0() { return cRobotKeyword_3_0_0; }
		
		//robot=[Robot|EString]
		public Assignment getRobotAssignment_3_0_1() { return cRobotAssignment_3_0_1; }
		
		//[Robot|EString]
		public CrossReference getRobotRobotCrossReference_3_0_1_0() { return cRobotRobotCrossReference_3_0_1_0; }
		
		//EString
		public RuleCall getRobotRobotEStringParserRuleCall_3_0_1_0_1() { return cRobotRobotEStringParserRuleCall_3_0_1_0_1; }
		
		//'single''robot'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'single'
		public Keyword getSingleKeyword_3_1_0() { return cSingleKeyword_3_1_0; }
		
		//'robot'
		public Keyword getRobotKeyword_3_1_1() { return cRobotKeyword_3_1_1; }
	}
	public class ClosestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Closest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClosestAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAllocateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cAllAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cAllAllKeyword_2_0_0_0 = (Keyword)cAllAssignment_2_0_0.eContents().get(0);
		private final Keyword cTasksKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cAtomicKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cTaskKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cAtAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final CrossReference cAtAtomicTaskCrossReference_2_1_2_0 = (CrossReference)cAtAssignment_2_1_2.eContents().get(0);
		private final RuleCall cAtAtomicTaskEStringParserRuleCall_2_1_2_0_1 = (RuleCall)cAtAtomicTaskCrossReference_2_1_2_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Keyword cCompoundKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Keyword cTaskKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cCtAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final CrossReference cCtCompoundTaskCrossReference_2_2_2_0 = (CrossReference)cCtAssignment_2_2_2.eContents().get(0);
		private final RuleCall cCtCompoundTaskEStringParserRuleCall_2_2_2_0_1 = (RuleCall)cCtCompoundTaskCrossReference_2_2_2_0.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Keyword cMissionKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Keyword cTaskKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Assignment cMtAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final CrossReference cMtMissionTaskCrossReference_2_3_2_0 = (CrossReference)cMtAssignment_2_3_2.eContents().get(0);
		private final RuleCall cMtMissionTaskEStringParserRuleCall_2_3_2_0_1 = (RuleCall)cMtMissionTaskCrossReference_2_3_2_0.eContents().get(1);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cClosestKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cRobotKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Closest returns Closest:
		//    {Closest}
		//    'allocate'
		//        (all='all''tasks' |
		//        'atomic''task' at=[AtomicTask|EString] |
		//        'compound''task' ct=[CompoundTask|EString] |
		//        'mission''task' mt=[MissionTask|EString])
		//    'to''closest''robot'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Closest}
		//'allocate'
		//    (all='all''tasks' |
		//    'atomic''task' at=[AtomicTask|EString] |
		//    'compound''task' ct=[CompoundTask|EString] |
		//    'mission''task' mt=[MissionTask|EString])
		//'to''closest''robot'
		public Group getGroup() { return cGroup; }
		
		//{Closest}
		public Action getClosestAction_0() { return cClosestAction_0; }
		
		//'allocate'
		public Keyword getAllocateKeyword_1() { return cAllocateKeyword_1; }
		
		//(all='all''tasks' |
		//'atomic''task' at=[AtomicTask|EString] |
		//'compound''task' ct=[CompoundTask|EString] |
		//'mission''task' mt=[MissionTask|EString])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//all='all''tasks'
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//all='all'
		public Assignment getAllAssignment_2_0_0() { return cAllAssignment_2_0_0; }
		
		//'all'
		public Keyword getAllAllKeyword_2_0_0_0() { return cAllAllKeyword_2_0_0_0; }
		
		//'tasks'
		public Keyword getTasksKeyword_2_0_1() { return cTasksKeyword_2_0_1; }
		
		//'atomic''task' at=[AtomicTask|EString]
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'atomic'
		public Keyword getAtomicKeyword_2_1_0() { return cAtomicKeyword_2_1_0; }
		
		//'task'
		public Keyword getTaskKeyword_2_1_1() { return cTaskKeyword_2_1_1; }
		
		//at=[AtomicTask|EString]
		public Assignment getAtAssignment_2_1_2() { return cAtAssignment_2_1_2; }
		
		//[AtomicTask|EString]
		public CrossReference getAtAtomicTaskCrossReference_2_1_2_0() { return cAtAtomicTaskCrossReference_2_1_2_0; }
		
		//EString
		public RuleCall getAtAtomicTaskEStringParserRuleCall_2_1_2_0_1() { return cAtAtomicTaskEStringParserRuleCall_2_1_2_0_1; }
		
		//'compound''task' ct=[CompoundTask|EString]
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'compound'
		public Keyword getCompoundKeyword_2_2_0() { return cCompoundKeyword_2_2_0; }
		
		//'task'
		public Keyword getTaskKeyword_2_2_1() { return cTaskKeyword_2_2_1; }
		
		//ct=[CompoundTask|EString]
		public Assignment getCtAssignment_2_2_2() { return cCtAssignment_2_2_2; }
		
		//[CompoundTask|EString]
		public CrossReference getCtCompoundTaskCrossReference_2_2_2_0() { return cCtCompoundTaskCrossReference_2_2_2_0; }
		
		//EString
		public RuleCall getCtCompoundTaskEStringParserRuleCall_2_2_2_0_1() { return cCtCompoundTaskEStringParserRuleCall_2_2_2_0_1; }
		
		//'mission''task' mt=[MissionTask|EString]
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'mission'
		public Keyword getMissionKeyword_2_3_0() { return cMissionKeyword_2_3_0; }
		
		//'task'
		public Keyword getTaskKeyword_2_3_1() { return cTaskKeyword_2_3_1; }
		
		//mt=[MissionTask|EString]
		public Assignment getMtAssignment_2_3_2() { return cMtAssignment_2_3_2; }
		
		//[MissionTask|EString]
		public CrossReference getMtMissionTaskCrossReference_2_3_2_0() { return cMtMissionTaskCrossReference_2_3_2_0; }
		
		//EString
		public RuleCall getMtMissionTaskEStringParserRuleCall_2_3_2_0_1() { return cMtMissionTaskEStringParserRuleCall_2_3_2_0_1; }
		
		//'to'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//'closest'
		public Keyword getClosestKeyword_4() { return cClosestKeyword_4; }
		
		//'robot'
		public Keyword getRobotKeyword_5() { return cRobotKeyword_5; }
	}
	public class MaxTasksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MaxTasks");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLimitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMaxKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNumberKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTasksKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Assignment cAllAssignment_5_0_0 = (Assignment)cGroup_5_0.eContents().get(0);
		private final Keyword cAllPerKeyword_5_0_0_0 = (Keyword)cAllAssignment_5_0_0.eContents().get(0);
		private final Keyword cRobotKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cInKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Keyword cRobotKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cRobotAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final CrossReference cRobotRobotCrossReference_5_1_2_0 = (CrossReference)cRobotAssignment_5_1_2.eContents().get(0);
		private final RuleCall cRobotRobotEStringParserRuleCall_5_1_2_0_1 = (RuleCall)cRobotRobotCrossReference_5_1_2_0.eContents().get(1);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNumAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNumEIntParserRuleCall_7_0 = (RuleCall)cNumAssignment_7.eContents().get(0);
		
		//MaxTasks returns MaxTasks:
		//    'limit''max''number''of''tasks'
		//    (all='per''robot' | 'in''robot'robot=[Robot|EString])
		//    'to' num=EInt
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'limit''max''number''of''tasks'
		//(all='per''robot' | 'in''robot'robot=[Robot|EString])
		//'to' num=EInt
		public Group getGroup() { return cGroup; }
		
		//'limit'
		public Keyword getLimitKeyword_0() { return cLimitKeyword_0; }
		
		//'max'
		public Keyword getMaxKeyword_1() { return cMaxKeyword_1; }
		
		//'number'
		public Keyword getNumberKeyword_2() { return cNumberKeyword_2; }
		
		//'of'
		public Keyword getOfKeyword_3() { return cOfKeyword_3; }
		
		//'tasks'
		public Keyword getTasksKeyword_4() { return cTasksKeyword_4; }
		
		//(all='per''robot' | 'in''robot'robot=[Robot|EString])
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//all='per''robot'
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//all='per'
		public Assignment getAllAssignment_5_0_0() { return cAllAssignment_5_0_0; }
		
		//'per'
		public Keyword getAllPerKeyword_5_0_0_0() { return cAllPerKeyword_5_0_0_0; }
		
		//'robot'
		public Keyword getRobotKeyword_5_0_1() { return cRobotKeyword_5_0_1; }
		
		//'in''robot'robot=[Robot|EString]
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'in'
		public Keyword getInKeyword_5_1_0() { return cInKeyword_5_1_0; }
		
		//'robot'
		public Keyword getRobotKeyword_5_1_1() { return cRobotKeyword_5_1_1; }
		
		//robot=[Robot|EString]
		public Assignment getRobotAssignment_5_1_2() { return cRobotAssignment_5_1_2; }
		
		//[Robot|EString]
		public CrossReference getRobotRobotCrossReference_5_1_2_0() { return cRobotRobotCrossReference_5_1_2_0; }
		
		//EString
		public RuleCall getRobotRobotEStringParserRuleCall_5_1_2_0_1() { return cRobotRobotEStringParserRuleCall_5_1_2_0_1; }
		
		//'to'
		public Keyword getToKeyword_6() { return cToKeyword_6; }
		
		//num=EInt
		public Assignment getNumAssignment_7() { return cNumAssignment_7; }
		
		//EInt
		public RuleCall getNumEIntParserRuleCall_7_0() { return cNumEIntParserRuleCall_7_0; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//                //end = 'end' | start = 'start';
		////types
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	
	public class ObjectiveElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Objective");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMinIdleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMinIdleMinimiseIdleKeyword_0_0 = (Keyword)cMinIdleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMinTravelEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMinTravelMinimiseTravelKeyword_1_0 = (Keyword)cMinTravelEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMaxSuccEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMaxSuccMaximiseSuccessKeyword_2_0 = (Keyword)cMaxSuccEnumLiteralDeclaration_2.eContents().get(0);
		
		////objectives
		//enum Objective returns Objective:
		//                minIdle = 'minimiseIdle' | minTravel = 'minimiseTravel' | maxSucc = 'maximiseSuccess';
		public EnumRule getRule() { return rule; }
		
		//minIdle = 'minimiseIdle' | minTravel = 'minimiseTravel' | maxSucc = 'maximiseSuccess'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//minIdle = 'minimiseIdle'
		public EnumLiteralDeclaration getMinIdleEnumLiteralDeclaration_0() { return cMinIdleEnumLiteralDeclaration_0; }
		
		//'minimiseIdle'
		public Keyword getMinIdleMinimiseIdleKeyword_0_0() { return cMinIdleMinimiseIdleKeyword_0_0; }
		
		//minTravel = 'minimiseTravel'
		public EnumLiteralDeclaration getMinTravelEnumLiteralDeclaration_1() { return cMinTravelEnumLiteralDeclaration_1; }
		
		//'minimiseTravel'
		public Keyword getMinTravelMinimiseTravelKeyword_1_0() { return cMinTravelMinimiseTravelKeyword_1_0; }
		
		//maxSucc = 'maximiseSuccess'
		public EnumLiteralDeclaration getMaxSuccEnumLiteralDeclaration_2() { return cMaxSuccEnumLiteralDeclaration_2; }
		
		//'maximiseSuccess'
		public Keyword getMaxSuccMaximiseSuccessKeyword_2_0() { return cMaxSuccMaximiseSuccessKeyword_2_0; }
	}
	public class XYElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.XY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cXEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cXXKeyword_0_0 = (Keyword)cXEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cYYKeyword_1_0 = (Keyword)cYEnumLiteralDeclaration_1.eContents().get(0);
		
		////others
		//enum XY returns XY:
		//                x = 'x' | y = 'y';
		public EnumRule getRule() { return rule; }
		
		//x = 'x' | y = 'y'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//x = 'x'
		public EnumLiteralDeclaration getXEnumLiteralDeclaration_0() { return cXEnumLiteralDeclaration_0; }
		
		//'x'
		public Keyword getXXKeyword_0_0() { return cXXKeyword_0_0; }
		
		//y = 'y'
		public EnumLiteralDeclaration getYEnumLiteralDeclaration_1() { return cYEnumLiteralDeclaration_1; }
		
		//'y'
		public Keyword getYYKeyword_1_0() { return cYYKeyword_1_0; }
	}
	public class LowerGreaterElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LowerGreater");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLowerEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLowerLowerKeyword_0_0 = (Keyword)cLowerEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGreaterGreaterKeyword_1_0 = (Keyword)cGreaterEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum LowerGreater returns LowerGreater:
		//                lower = 'lower' | greater = 'greater';
		public EnumRule getRule() { return rule; }
		
		//lower = 'lower' | greater = 'greater'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//lower = 'lower'
		public EnumLiteralDeclaration getLowerEnumLiteralDeclaration_0() { return cLowerEnumLiteralDeclaration_0; }
		
		//'lower'
		public Keyword getLowerLowerKeyword_0_0() { return cLowerLowerKeyword_0_0; }
		
		//greater = 'greater'
		public EnumLiteralDeclaration getGreaterEnumLiteralDeclaration_1() { return cGreaterEnumLiteralDeclaration_1; }
		
		//'greater'
		public Keyword getGreaterGreaterKeyword_1_0() { return cGreaterGreaterKeyword_1_0; }
	}
	public class StartEndElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.StartEnd");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEndEndBeforeKeyword_0_0 = (Keyword)cEndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cStartEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cStartStartAfterKeyword_1_0 = (Keyword)cStartEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum StartEnd returns StartEnd:
		//                end = 'end before' | start = 'start after';
		public EnumRule getRule() { return rule; }
		
		//end = 'end before' | start = 'start after'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//end = 'end before'
		public EnumLiteralDeclaration getEndEnumLiteralDeclaration_0() { return cEndEnumLiteralDeclaration_0; }
		
		//'end before'
		public Keyword getEndEndBeforeKeyword_0_0() { return cEndEndBeforeKeyword_0_0; }
		
		//start = 'start after'
		public EnumLiteralDeclaration getStartEnumLiteralDeclaration_1() { return cStartEnumLiteralDeclaration_1; }
		
		//'start after'
		public Keyword getStartStartAfterKeyword_1_0() { return cStartStartAfterKeyword_1_0; }
	}
	
	private final ProblemSpecificationElements pProblemSpecification;
	private final WorldModelElements pWorldModel;
	private final LocationElements pLocation;
	private final PathsElements pPaths;
	private final TasksModelElements pTasksModel;
	private final AtomicTaskElements pAtomicTask;
	private final CompoundTaskElements pCompoundTask;
	private final RobotElements pRobot;
	private final CapabilityElements pCapability;
	private final MissionElements pMission;
	private final MissionTaskElements pMissionTask;
	private final ConstraintsElements pConstraints;
	private final RateSuccElements pRateSucc;
	private final SpaceXYRobotElements pSpaceXYRobot;
	private final TaskTimeElements pTaskTime;
	private final AllocateTElements pAllocateT;
	private final ClosestElements pClosest;
	private final MaxTasksElements pMaxTasks;
	private final ObjectiveElements eObjective;
	private final XYElements eXY;
	private final LowerGreaterElements eLowerGreater;
	private final StartEndElements eStartEnd;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final EStringElements pEString;
	private final EDoubleElements pEDouble;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProblemSpecification = new ProblemSpecificationElements();
		this.pWorldModel = new WorldModelElements();
		this.pLocation = new LocationElements();
		this.pPaths = new PathsElements();
		this.pTasksModel = new TasksModelElements();
		this.pAtomicTask = new AtomicTaskElements();
		this.pCompoundTask = new CompoundTaskElements();
		this.pRobot = new RobotElements();
		this.pCapability = new CapabilityElements();
		this.pMission = new MissionElements();
		this.pMissionTask = new MissionTaskElements();
		this.pConstraints = new ConstraintsElements();
		this.pRateSucc = new RateSuccElements();
		this.pSpaceXYRobot = new SpaceXYRobotElements();
		this.pTaskTime = new TaskTimeElements();
		this.pAllocateT = new AllocateTElements();
		this.pClosest = new ClosestElements();
		this.pMaxTasks = new MaxTasksElements();
		this.eObjective = new ObjectiveElements();
		this.eXY = new XYElements();
		this.eLowerGreater = new LowerGreaterElements();
		this.eStartEnd = new StartEndElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.pEString = new EStringElements();
		this.pEDouble = new EDoubleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ProblemSpecification returns ProblemSpecification:
	//    'ProblemSpecification'
	//    '{'
	//        'WorldModel' ':' worldModel+=WorldModel ( worldModel+=WorldModel)*
	//        'TasksModel' ':' tasksModel+=TasksModel ( "," tasksModel+=TasksModel)*
	//        'RobotsModel' ':' robotsModel+=Robot ( "," robotsModel+=Robot)*
	//        'Mission' ':' mission+=Mission ( "," mission+=Mission)*
	//    '}';
	public ProblemSpecificationElements getProblemSpecificationAccess() {
		return pProblemSpecification;
	}
	
	public ParserRule getProblemSpecificationRule() {
		return getProblemSpecificationAccess().getRule();
	}
	
	///// --------- World model
	//WorldModel returns WorldModel:
	//    Location | Paths;
	public WorldModelElements getWorldModelAccess() {
		return pWorldModel;
	}
	
	public ParserRule getWorldModelRule() {
		return getWorldModelAccess().getRule();
	}
	
	//Location returns Location:
	//    //{Location}
	//    name=EString ':'
	//    '('
	//        'x' x=EDouble
	//        'y' y=EDouble
	//        (',' 'describes' description=EString)?
	//    ')';
	public LocationElements getLocationAccess() {
		return pLocation;
	}
	
	public ParserRule getLocationRule() {
		return getLocationAccess().getRule();
	}
	
	//Paths returns Paths:
	//    //{Paths}
	//    'distance'
	//        loc1=[Location|EString] 'to'
	//        loc2=[Location|EString]
	//        'is' distance=EDouble
	//        ('has''success''rate:' success=EDouble '%')?
	//    ;
	public PathsElements getPathsAccess() {
		return pPaths;
	}
	
	public ParserRule getPathsRule() {
		return getPathsAccess().getRule();
	}
	
	///// --------- Tasks
	//TasksModel returns TasksModel:
	//    AtomicTask | CompoundTask;
	public TasksModelElements getTasksModelAccess() {
		return pTasksModel;
	}
	
	public ParserRule getTasksModelRule() {
		return getTasksModelAccess().getRule();
	}
	
	//AtomicTask returns AtomicTask:
	//    //{AtomicTask}
	//    name=EString ':'
	//    robots=EInt ('robots'|'robot') 'needed'
	//    ('at' 'location'
	//    loc=[Location|EString])?
	//    (',' retry=EInt 'retries''allowed')?
	//    ;
	public AtomicTaskElements getAtomicTaskAccess() {
		return pAtomicTask;
	}
	
	public ParserRule getAtomicTaskRule() {
		return getAtomicTaskAccess().getRule();
	}
	
	//CompoundTask returns CompoundTask:
	//    //{CompoundTask}
	//    name=EString ':'
	//    'subtasks'
	//    '['
	//        (canDoTask+=[TasksModel|EString] ( "," canDoTask+=[TasksModel|EString])* )?
	//    ']'
	//    ('constraint:' ordered?='ordered' | 'constraint:' consecutive?='consecutive')?
	//    ;
	public CompoundTaskElements getCompoundTaskAccess() {
		return pCompoundTask;
	}
	
	public ParserRule getCompoundTaskRule() {
		return getCompoundTaskAccess().getRule();
	}
	
	///// ----------- Robots
	//Robot returns Robot:
	//    //{Robot}
	//    name=EString
	//    ':'
	//        'at''initial''position' initLoc=[Location|EString]
	//        'has''velocity' velocity=EDouble
	//        'with''capabilities'
	//        '('
	//            capabilities+=Capability ( "," capabilities+=Capability)*
	//        ')'
	//    ;
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//Capability returns Capability:
	//    //{Capability}
	//    at=[AtomicTask|EString]
	//    '-required''time:' time=EDouble
	//    ',''success''rate:' success=EDouble '%'
	//    ;
	public CapabilityElements getCapabilityAccess() {
		return pCapability;
	}
	
	public ParserRule getCapabilityRule() {
		return getCapabilityAccess().getRule();
	}
	
	///// ----------- Missions
	//Mission returns Mission:
	//    missionTask+=MissionTask ( "," missionTask+=MissionTask)*
	//    'objectives:'
	//        obj+=Objective ( "," obj+=Objective)*
	//        //objectives+=Objective ( "," objectives+=Objective)* ;
	//    ('constraints:'
	//        constraints+=Constraints ( "," constraints+=Constraints)*
	//    )?
	//    ('parameters:'
	//        ('time:' time = EInt )?
	//        ('numAllocation:'numAlloc = EInt)?
	//        ('population:' population = EInt)?
	//        ('evaluation:' evaluations = EInt)?
	//    )?
	//    ;
	public MissionElements getMissionAccess() {
		return pMission;
	}
	
	public ParserRule getMissionRule() {
		return getMissionAccess().getRule();
	}
	
	//MissionTask returns MissionTask:
	//    {MissionTask}
	//    name=EString ':'
	//    ('atomic''task' at=[AtomicTask|EString] | 'compound''task' ct=[CompoundTask|EString])
	//    ('at''location' loc=[Location|EString])?
	//    ;
	public MissionTaskElements getMissionTaskAccess() {
		return pMissionTask;
	}
	
	public ParserRule getMissionTaskRule() {
		return getMissionTaskAccess().getRule();
	}
	
	//Constraints returns Constraints:
	//    RateSucc | SpaceXYRobot | TaskTime | AllocateT | Closest | MaxTasks  ;
	public ConstraintsElements getConstraintsAccess() {
		return pConstraints;
	}
	
	public ParserRule getConstraintsRule() {
		return getConstraintsAccess().getRule();
	}
	
	//RateSucc returns Constraints:
	//    {RateSucc}
	//    ('rate''of''success''greater''than' rateSucc=EDouble)?
	//    ;
	public RateSuccElements getRateSuccAccess() {
		return pRateSucc;
	}
	
	public ParserRule getRateSuccRule() {
		return getRateSuccAccess().getRule();
	}
	
	//SpaceXYRobot returns SpaceXYRobot:
	//    ('robot' robot=[Robot|EString] | allrobots='all''robots' )
	//    'work''in' coordinate=XY
	//    lowerGreater=LowerGreater 'than' val=EDouble
	//    ;
	public SpaceXYRobotElements getSpaceXYRobotAccess() {
		return pSpaceXYRobot;
	}
	
	public ParserRule getSpaceXYRobotRule() {
		return getSpaceXYRobotAccess().getRule();
	}
	
	//TaskTime returns TaskTime:
	//    ('atomic''task' at=[AtomicTask|EString] |
	//    'compound''task' ct=[CompoundTask|EString] |
	//    'mission''task' mt=[MissionTask|EString])
	//    'has''to' startEnd=StartEnd
	//    'time:' time=EDouble
	//    ;
	public TaskTimeElements getTaskTimeAccess() {
		return pTaskTime;
	}
	
	public ParserRule getTaskTimeRule() {
		return getTaskTimeAccess().getRule();
	}
	
	//AllocateT returns AllocateT:
	//    'allocate'
	//    ('atomic''task' at=[AtomicTask|EString] |
	//    'compound''task' ct=[CompoundTask|EString] |
	//    'mission''task' mt=[MissionTask|EString])
	//    'to'
	//    ('robot' robot=[Robot|EString]| 'single''robot')
	//    ;
	public AllocateTElements getAllocateTAccess() {
		return pAllocateT;
	}
	
	public ParserRule getAllocateTRule() {
		return getAllocateTAccess().getRule();
	}
	
	//Closest returns Closest:
	//    {Closest}
	//    'allocate'
	//        (all='all''tasks' |
	//        'atomic''task' at=[AtomicTask|EString] |
	//        'compound''task' ct=[CompoundTask|EString] |
	//        'mission''task' mt=[MissionTask|EString])
	//    'to''closest''robot'
	//    ;
	public ClosestElements getClosestAccess() {
		return pClosest;
	}
	
	public ParserRule getClosestRule() {
		return getClosestAccess().getRule();
	}
	
	//MaxTasks returns MaxTasks:
	//    'limit''max''number''of''tasks'
	//    (all='per''robot' | 'in''robot'robot=[Robot|EString])
	//    'to' num=EInt
	//    ;
	public MaxTasksElements getMaxTasksAccess() {
		return pMaxTasks;
	}
	
	public ParserRule getMaxTasksRule() {
		return getMaxTasksAccess().getRule();
	}
	
	////objectives
	//enum Objective returns Objective:
	//                minIdle = 'minimiseIdle' | minTravel = 'minimiseTravel' | maxSucc = 'maximiseSuccess';
	public ObjectiveElements getObjectiveAccess() {
		return eObjective;
	}
	
	public EnumRule getObjectiveRule() {
		return getObjectiveAccess().getRule();
	}
	
	////others
	//enum XY returns XY:
	//                x = 'x' | y = 'y';
	public XYElements getXYAccess() {
		return eXY;
	}
	
	public EnumRule getXYRule() {
		return getXYAccess().getRule();
	}
	
	//enum LowerGreater returns LowerGreater:
	//                lower = 'lower' | greater = 'greater';
	public LowerGreaterElements getLowerGreaterAccess() {
		return eLowerGreater;
	}
	
	public EnumRule getLowerGreaterRule() {
		return getLowerGreaterAccess().getRule();
	}
	
	//enum StartEnd returns StartEnd:
	//                end = 'end before' | start = 'start after';
	public StartEndElements getStartEndAccess() {
		return eStartEnd;
	}
	
	public EnumRule getStartEndRule() {
		return getStartEndAccess().getRule();
	}
	
	//                //end = 'end' | start = 'start';
	////types
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
