ProblemSpecification{
	WorldModel:
    room1 : ( x 2.0 y 3.0 ) //room1
    room2 : ( x 1.0 y 7.0 ) //room2
    room3 : ( x 4.0 y 1.0 ) //room3
    room4 : ( x 10.0 y 1.0) //room4
    room5 : ( x 10.0 y 5.0) //room5
    room6 : ( x 9.0 y 7.0 ) //room6
    l1 : ( x 1.0 y 1.0 ) //robot1
    l2 : ( x 2.0 y 1.0 ) //robot2
    l3 : ( x 6.0 y 7.0 ) //robot3
    l4: ( x 7.0 y 7.0 ) //robot4
    l5: ( x 8.0 y 7.0 ) //robot5
    
    le: ( x 10.0 y 6.0 ) //--- Added
    
    distance room2 to room3 is 3.0 has success rate: 90.0%
	distance room3 to room2 is 3.0 has success rate: 90.0%
    
    distance l1 to room1 is 2.0
	distance l1 to room2 is 6.0
	distance l1 to room3 is 3.0
	distance l1 to room4 is 9.0
	distance l1 to room5 is 12.0
	distance l1 to room6 is 14.0
	//paths r2
	distance l2 to room1 is 2.0
	distance l2 to room2 is 6.0
	distance l2 to room3 is 2.0
	distance l2 to room4 is 8.0
	distance l2 to room5 is 11.0
	distance l2 to room6 is 13.0
	//paths r3
	distance l3 to room1 is 7.0
	distance l3 to room2 is 5.0
	distance l3 to room3 is 7.0
	distance l3 to room4 is 8.0
	distance l3 to room5 is 5.0
	distance l3 to room6 is 3.0
	//paths r4
	distance l4 to room1 is 8.0
	distance l4 to room2 is 6.0
	distance l4 to room3 is 8.0
	distance l4 to room4 is 7.0
	distance l4 to room5 is 4.0
	distance l4 to room6 is 2.0
	//paths r5
	distance l5 to room1 is 9.0
	distance l5 to room2 is 6.0
	distance l5 to room3 is 9.0
	distance l5 to room4 is 6.0
	distance l5 to room5 is 3.0
	distance l5 to room6 is 1.0
	
	 //...  
	TasksModel:
	 at1 : 2 robots needed at location room1, 2 retries allowed, // moving medical equipment
	 at2 : 1 robot needed at location room2,  // cleaning the room
	 at3:  1 robot needed at location room2,  // sanitising room
	 at4:  1 robot needed at location room2,  //notify patient
	 ct1: subtasks [at3,at2], //cleaning room
	 ct2:subtasks [at4,ct1]  constraint: ordered, //clean patient room
	 
	 //--- Added
	 ate : 4 robots needed at location le
	 
	RobotsModel:  
	 
	//cleaner   
	r1 : at initial position l1 has velocity 1.0 with capabilities
	 	(at2 -required time: 5.0, success rate: 95.0%,
	 	 at3 -required time: 5.0, success rate: 95.0%, 
	 	 at4 -required time: 1.0, success rate: 99.0%,
	 	 ate -required time: 1.0, success rate: 99.0%), //--- Added
//	r2 : at initial position l2 has velocity 1.0 with capabilities
//	 	(at2 -required time: 5.0, success rate: 85.0%,
//	 	 at3 -required time: 4.0, success rate: 90.0%,
//	 	 at4 -required time: 1.0, success rate: 85.0%,
//	 	 ate -required time: 1.0, success rate: 99.0%),//--- Added
	r3 : at initial position l3 has velocity 2.0 with capabilities
	 	(at2 -required time: 6.0, success rate: 99.0%,
	 	 at3 -required time: 6.0, success rate: 99.0%,
	 	 at4 -required time: 1.0, success rate: 99.0%,
	 	 ate -required time: 1.0, success rate: 99.0%), //--- Added
	//pick and place
	r4 : at initial position l4 has velocity 2.0 with capabilities
	 	(at1 -required time: 4.0, success rate: 97.0%,
	 	 ate -required time: 1.0, success rate: 99.0%), 
	r5 : at initial position l5 has velocity 2.0 with capabilities
	 	(at1 -required time: 4.0, success rate: 98.0%,
	 	 ate -required time: 1.0, success rate: 99.0%)//--- Added
	 	 
	Mission :
		m1 : atomic task at1 at location room1, //move equipment
//		m2 : atomic task at1 at location  room6, //move equipment
		m3 : compound task ct2 at location room2, //clean
		m4 : compound task ct2 at location room3, //clean
		m5 : compound task ct2 at location room4, //clean  
		m6 : compound task ct2 at location room5, //clean
		
		me : atomic task ate at location le //--- Added 
		
		objectives: 
			minimiseIdle, minimiseTravel, maximiseSuccess
		constraints: 
			rate of success greater than 20.0,
			robot r3 work in x greater than 9.0, 
			robot r3 work in y lower than 7.0,
			//allocate mission task m6 to robot r3,
			atomic task at1 has to start after time: 10.0,
			
		parameters: 
			time: 120
}

