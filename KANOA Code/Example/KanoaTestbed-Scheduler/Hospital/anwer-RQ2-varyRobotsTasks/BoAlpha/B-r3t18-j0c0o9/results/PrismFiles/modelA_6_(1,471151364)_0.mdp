mdp

const int TT=700;//total time available 

//r3 velocity:3.0
const int travelr3at1_13=10 ;// from location: l3d (robot initial loc) to location: l3g (at1_13)    distance:30
const int travelr3at2_14=0 ;// from location: l3g (at1_13) to location: l3g(at2_14)    distance:0
const int r3at1_13Time=6;
const int r3at2_14Time=5;
const int maxIdler3=20;

formula done=(r3order=2);

//formulae for ordered tasks
formula r3at1_13Done = r3order>=1 ;


//formulae for consecutive tasks




module r3
 r3order:[0..2];
 r3time:[0..700];
 r3idleTime:[0..maxIdler3];
 [r3at1_13] r3order=0 & (r3time+r3at1_13Time+travelr3at1_13<=TT) -> (r3order'=1) & (r3time'=r3time+r3at1_13Time+travelr3at1_13);
 [r3at2_14] r3order=1 & (r3time+r3at2_14Time+travelr3at2_14<=TT) & (r3time+travelr3at2_14 >= r3time) & (r3at1_13Done) -> (r3order'=2) & (r3time'=r3time+r3at2_14Time+travelr3at2_14);
 [r3idle] r3order!=2 & (r3time+1<=TT) & (r3idleTime+1<=maxIdler3) -> (r3time'=r3time+1) & (r3idleTime'=r3idleTime+1);
endmodule

rewards "idle"
 //Note- there is no idle option for robot ri if maxIdleri==0 (computed beforehand)
 [r3idle] true: 1;
endrewards



