mdp

const int TT=120;//total time available 

//r2 velocity:1.0
const int travelr2at4_3=6 ;// from location: l2 (robot initial loc) to location: room2 (at4_3)    distance:6
const int travelr2at2_26=9 ;// from location: room2 (at4_3) to location: room5(at2_26)    distance:9
const int travelr2at4_6=7 ;// from location: room5 (at2_26) to location: room3(at4_6)    distance:7
const int travelr2at2_5=3 ;// from location: room3 (at4_6) to location: room2(at2_5)    distance:3
const int travelr2at4_15=9 ;// from location: room2 (at2_5) to location: room5(at4_15)    distance:9
const int travelr2at2_8=7 ;// from location: room5 (at4_15) to location: room3(at2_8)    distance:7
const int travelr2at4_18=7 ;// from location: room3 (at2_8) to location: room5(at4_18)    distance:7
//r3 velocity:2.0
const int travelr3at4_24=3 ;// from location: l3 (robot initial loc) to location: room5 (at4_24)    distance:5
const int travelr3at4_27=0 ;// from location: room5 (at4_24) to location: room5(at4_27)    distance:0
const int travelr3at4_21=0 ;// from location: room5 (at4_27) to location: room5(at4_21)    distance:0
const int travelr3at2_23=0 ;// from location: room5 (at4_21) to location: room5(at2_23)    distance:0
const int travelr3at4_9=2 ;// from location: room5 (at2_23) to location: room4(at4_9)    distance:4
const int travelr3at4_12=2 ;// from location: room4 (at4_9) to location: room5(at4_12)    distance:4
const int travelr3at2_20=0 ;// from location: room5 (at4_12) to location: room5(at2_20)    distance:0
const int travelr3at2_14=0 ;// from location: room5 (at2_20) to location: room5(at2_14)    distance:0
const int travelr3at2_17=0 ;// from location: room5 (at2_14) to location: room5(at2_17)    distance:0
const int travelr3at2_29=0 ;// from location: room5 (at2_17) to location: room5(at2_29)    distance:0
const int travelr3at2_11=2 ;// from location: room5 (at2_29) to location: room4(at2_11)    distance:4
const int travelr3at3_13=2 ;// from location: room4 (at2_11) to location: room5(at3_13)    distance:4
//r1 velocity:1.0
const int travelr1at3_28=12 ;// from location: l1 (robot initial loc) to location: room5 (at3_28)    distance:12
const int travelr1at3_19=0 ;// from location: room5 (at3_28) to location: room5(at3_19)    distance:0
const int travelr1at3_16=0 ;// from location: room5 (at3_19) to location: room5(at3_16)    distance:0
const int travelr1at3_7=7 ;// from location: room5 (at3_16) to location: room3(at3_7)    distance:7
const int travelr1at3_4=3 ;// from location: room3 (at3_7) to location: room2(at3_4)    distance:3
const int travelr1at3_22=9 ;// from location: room2 (at3_4) to location: room5(at3_22)    distance:9
const int travelr1at3_10=4 ;// from location: room5 (at3_22) to location: room4(at3_10)    distance:4
const int travelr1at3_25=4 ;// from location: room4 (at3_10) to location: room5(at3_25)    distance:4
const int r2at4_3Time=1;
const int r2at2_26Time=5;
const int r2at4_6Time=1;
const int r2at2_5Time=5;
const int r2at4_15Time=1;
const int r2at2_8Time=5;
const int r2at4_18Time=1;
const int r3at4_24Time=1;
const int r3at4_27Time=1;
const int r3at4_21Time=1;
const int r3at2_23Time=6;
const int r3at4_9Time=1;
const int r3at4_12Time=1;
const int r3at2_20Time=6;
const int r3at2_14Time=6;
const int r3at2_17Time=6;
const int r3at2_29Time=6;
const int r3at2_11Time=6;
const int r3at3_13Time=6;
const int r1at3_28Time=5;
const int r1at3_19Time=5;
const int r1at3_16Time=5;
const int r1at3_7Time=5;
const int r1at3_4Time=5;
const int r1at3_22Time=5;
const int r1at3_10Time=5;
const int r1at3_25Time=5;
const int maxIdler2=20;
const int maxIdler3=20;
const int maxIdler1=20;

formula done=(r2order=7&r3order=12&r1order=8);

//formulae for ordered tasks
formula r3at4_24Done = r3order>=1 ;
formula r3at4_27Done = r3order>=2 ;
formula r2at4_15Done = r2order>=5 ;
formula r2at4_18Done = r2order>=7 ;
formula r2at4_6Done = r2order>=3 ;
formula r3at4_9Done = r3order>=5 ;
formula r2at4_3Done = r2order>=1 ;
formula r3at4_21Done = r3order>=3 ;
formula r3at4_12Done = r3order>=6 ;


//formulae for consecutive tasks




module r2
 r2order:[0..7];
 r2time:[0..120];
 r2idleTime:[0..maxIdler2];
 [r2at4_3] r2order=0 & (r2time+r2at4_3Time+travelr2at4_3<=TT) -> (r2order'=1) & (r2time'=r2time+r2at4_3Time+travelr2at4_3);
 [r2at2_26] r2order=1 & (r2time+r2at2_26Time+travelr2at2_26<=TT) & (r2time+travelr2at2_26 >= r3time) & (r3at4_24Done) -> (r2order'=2) & (r2time'=r2time+r2at2_26Time+travelr2at2_26);
 [r2at4_6] r2order=2 & (r2time+r2at4_6Time+travelr2at4_6<=TT) -> (r2order'=3) & (r2time'=r2time+r2at4_6Time+travelr2at4_6);
 [r2at2_5] r2order=3 & (r2time+r2at2_5Time+travelr2at2_5<=TT) & (r2time+travelr2at2_5 >= r2time) & (r2at4_3Done) -> (r2order'=4) & (r2time'=r2time+r2at2_5Time+travelr2at2_5);
 [r2at4_15] r2order=4 & (r2time+r2at4_15Time+travelr2at4_15<=TT) -> (r2order'=5) & (r2time'=r2time+r2at4_15Time+travelr2at4_15);
 [r2at2_8] r2order=5 & (r2time+r2at2_8Time+travelr2at2_8<=TT) & (r2time+travelr2at2_8 >= r2time) & (r2at4_6Done) -> (r2order'=6) & (r2time'=r2time+r2at2_8Time+travelr2at2_8);
 [r2at4_18] r2order=6 & (r2time+r2at4_18Time+travelr2at4_18<=TT) -> (r2order'=7) & (r2time'=r2time+r2at4_18Time+travelr2at4_18);
 [r2idle] r2order!=7 & (r2time+1<=TT) & (r2idleTime+1<=maxIdler2) -> (r2time'=r2time+1) & (r2idleTime'=r2idleTime+1);
endmodule

module r3
 r3order:[0..12];
 r3time:[0..120];
 r3idleTime:[0..maxIdler3];
 [r3at4_24] r3order=0 & (r3time+r3at4_24Time+travelr3at4_24<=TT) -> (r3order'=1) & (r3time'=r3time+r3at4_24Time+travelr3at4_24);
 [r3at4_27] r3order=1 & (r3time+r3at4_27Time+travelr3at4_27<=TT) -> (r3order'=2) & (r3time'=r3time+r3at4_27Time+travelr3at4_27);
 [r3at4_21] r3order=2 & (r3time+r3at4_21Time+travelr3at4_21<=TT) -> (r3order'=3) & (r3time'=r3time+r3at4_21Time+travelr3at4_21);
 [r3at2_23] r3order=3 & (r3time+r3at2_23Time+travelr3at2_23<=TT) & (r3time+travelr3at2_23 >= r3time) & (r3at4_21Done) -> (r3order'=4) & (r3time'=r3time+r3at2_23Time+travelr3at2_23);
 [r3at4_9] r3order=4 & (r3time+r3at4_9Time+travelr3at4_9<=TT) -> (r3order'=5) & (r3time'=r3time+r3at4_9Time+travelr3at4_9);
 [r3at4_12] r3order=5 & (r3time+r3at4_12Time+travelr3at4_12<=TT) -> (r3order'=6) & (r3time'=r3time+r3at4_12Time+travelr3at4_12);
 [r3at2_20] r3order=6 & (r3time+r3at2_20Time+travelr3at2_20<=TT) & (r3time+travelr3at2_20 >= r2time) & (r2at4_18Done) -> (r3order'=7) & (r3time'=r3time+r3at2_20Time+travelr3at2_20);
 [r3at2_14] r3order=7 & (r3time+r3at2_14Time+travelr3at2_14<=TT) & (r3time+travelr3at2_14 >= r3time) & (r3at4_12Done) -> (r3order'=8) & (r3time'=r3time+r3at2_14Time+travelr3at2_14);
 [r3at2_17] r3order=8 & (r3time+r3at2_17Time+travelr3at2_17<=TT) & (r3time+travelr3at2_17 >= r2time) & (r2at4_15Done) -> (r3order'=9) & (r3time'=r3time+r3at2_17Time+travelr3at2_17);
 [r3at2_29] r3order=9 & (r3time+r3at2_29Time+travelr3at2_29<=TT) & (r3time+travelr3at2_29 >= r3time) & (r3at4_27Done) -> (r3order'=10) & (r3time'=r3time+r3at2_29Time+travelr3at2_29);
 [r3at2_11] r3order=10 & (r3time+r3at2_11Time+travelr3at2_11<=TT) & (r3time+travelr3at2_11 >= r3time) & (r3at4_9Done) -> (r3order'=11) & (r3time'=r3time+r3at2_11Time+travelr3at2_11);
 [r3at3_13] r3order=11 & (r3time+r3at3_13Time+travelr3at3_13<=TT) & (r3time+travelr3at3_13 >= r3time) & (r3at4_12Done) -> (r3order'=12) & (r3time'=r3time+r3at3_13Time+travelr3at3_13);
 [r3idle] r3order!=12 & (r3time+1<=TT) & (r3idleTime+1<=maxIdler3) -> (r3time'=r3time+1) & (r3idleTime'=r3idleTime+1);
endmodule

module r1
 r1order:[0..8];
 r1time:[0..120];
 r1idleTime:[0..maxIdler1];
 [r1at3_28] r1order=0 & (r1time+r1at3_28Time+travelr1at3_28<=TT) & (r1time+travelr1at3_28 >= r3time) & (r3at4_27Done) -> (r1order'=1) & (r1time'=r1time+r1at3_28Time+travelr1at3_28);
 [r1at3_19] r1order=1 & (r1time+r1at3_19Time+travelr1at3_19<=TT) & (r1time+travelr1at3_19 >= r2time) & (r2at4_18Done) -> (r1order'=2) & (r1time'=r1time+r1at3_19Time+travelr1at3_19);
 [r1at3_16] r1order=2 & (r1time+r1at3_16Time+travelr1at3_16<=TT) & (r1time+travelr1at3_16 >= r2time) & (r2at4_15Done) -> (r1order'=3) & (r1time'=r1time+r1at3_16Time+travelr1at3_16);
 [r1at3_7] r1order=3 & (r1time+r1at3_7Time+travelr1at3_7<=TT) & (r1time+travelr1at3_7 >= r2time) & (r2at4_6Done) -> (r1order'=4) & (r1time'=r1time+r1at3_7Time+travelr1at3_7);
 [r1at3_4] r1order=4 & (r1time+r1at3_4Time+travelr1at3_4<=TT) & (r1time+travelr1at3_4 >= r2time) & (r2at4_3Done) -> (r1order'=5) & (r1time'=r1time+r1at3_4Time+travelr1at3_4);
 [r1at3_22] r1order=5 & (r1time+r1at3_22Time+travelr1at3_22<=TT) & (r1time+travelr1at3_22 >= r3time) & (r3at4_21Done) -> (r1order'=6) & (r1time'=r1time+r1at3_22Time+travelr1at3_22);
 [r1at3_10] r1order=6 & (r1time+r1at3_10Time+travelr1at3_10<=TT) & (r1time+travelr1at3_10 >= r3time) & (r3at4_9Done) -> (r1order'=7) & (r1time'=r1time+r1at3_10Time+travelr1at3_10);
 [r1at3_25] r1order=7 & (r1time+r1at3_25Time+travelr1at3_25<=TT) & (r1time+travelr1at3_25 >= r3time) & (r3at4_24Done) -> (r1order'=8) & (r1time'=r1time+r1at3_25Time+travelr1at3_25);
 [r1idle] r1order!=8 & (r1time+1<=TT) & (r1idleTime+1<=maxIdler1) -> (r1time'=r1time+1) & (r1idleTime'=r1idleTime+1);
endmodule

rewards "idle"
 //Note- there is no idle option for robot ri if maxIdleri==0 (computed beforehand)
 [r2idle] true: 1;
 [r3idle] true: 1;
 [r1idle] true: 1;
endrewards



