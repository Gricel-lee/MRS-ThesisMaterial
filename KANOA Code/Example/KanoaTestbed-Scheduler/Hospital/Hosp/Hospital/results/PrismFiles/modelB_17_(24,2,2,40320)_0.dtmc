dtmc

const double p_travel_r3at4_9=1.0 ;// from location: l3 (robot initial loc) to location: room4 (at4_9)
const double p_travel_r3at4_12=1.0 ;// from location: room4 (at4_9) to location: room5(at4_12)
const double p_travel_r3at3_13=1.0 ;// from location: room5 (at4_12) to location: room5(at3_13)
const double p_travel_r3at2_14=1.0 ;// from location: room5 (at3_13) to location: room5(at2_14)
const double p_travel_r1at4_6=1.0 ;// from location: l1 (robot initial loc) to location: room3 (at4_6)
const double p_travel_r1at4_3=0.9 ;// from location: room3 (at4_6) to location: room2(at4_3)
const double p_travel_r1at3_7=0.9 ;// from location: room2 (at4_3) to location: room3(at3_7)
const double p_travel_r1at3_4=0.9 ;// from location: room3 (at3_7) to location: room2(at3_4)
const double p_travel_r1at3_10=1.0 ;// from location: room2 (at3_4) to location: room4(at3_10)
const double p_travel_r1at2_11=1.0 ;// from location: room4 (at3_10) to location: room4(at2_11)
const double p_travel_r1at2_8=1.0 ;// from location: room4 (at2_11) to location: room3(at2_8)
const double p_travel_r1at2_5=0.9 ;// from location: room3 (at2_8) to location: room2(at2_5)
const double p_r3at4_9=0.99 ;
const double p_r3at4_12=0.99 ;
const double p_r3at3_13=0.99 ;
const double p_r3at2_14=0.99 ;
const double p_r1at4_6=0.99 ;
const double p_r1at4_3=0.99 ;
const double p_r1at3_7=0.95 ;
const double p_r1at3_4=0.95 ;
const double p_r1at3_10=0.95 ;
const double p_r1at2_11=0.95 ;
const double p_r1at2_8=0.95 ;
const double p_r1at2_5=0.95 ;

formula done=(r3=16&r1=32);

module r3
 r3:[0..16];
 //travel to at4_9
 [r3travel_at4_9] r3=0->p_travel_r3at4_9:(r3'=2) + 1-p_travel_r3at4_9:(r3'=1);
 //try at4_9, no retry allowed
 []r3=2 -> 0.99:(r3'=4) + 1-0.99:(r3'=3); //fail task at r3=3
 //travel to at4_12
 [r3travel_at4_12] r3=4->p_travel_r3at4_12:(r3'=6) + 1-p_travel_r3at4_12:(r3'=5);
 //try at4_12, no retry allowed
 []r3=6 -> 0.99:(r3'=8) + 1-0.99:(r3'=7); //fail task at r3=7
 //travel to at3_13
 [r3travel_at3_13] r3=8->p_travel_r3at3_13:(r3'=10) + 1-p_travel_r3at3_13:(r3'=9);
 //try at3_13, no retry allowed
 []r3=10 -> 0.99:(r3'=12) + 1-0.99:(r3'=11); //fail task at r3=11
 //travel to at2_14
 [r3travel_at2_14] r3=12->p_travel_r3at2_14:(r3'=14) + 1-p_travel_r3at2_14:(r3'=13);
 //try at2_14, no retry allowed
 []r3=14 -> 0.99:(r3'=16) + 1-0.99:(r3'=15); //fail task at r3=15
endmodule

module r1
 r1:[0..32];
 //travel to at4_6
 [r1travel_at4_6] r1=0->p_travel_r1at4_6:(r1'=2) + 1-p_travel_r1at4_6:(r1'=1);
 //try at4_6, no retry allowed
 []r1=2 -> 0.99:(r1'=4) + 1-0.99:(r1'=3); //fail task at r1=3
 //travel to at4_3
 [r1travel_at4_3] r1=4->p_travel_r1at4_3:(r1'=6) + 1-p_travel_r1at4_3:(r1'=5);
 //try at4_3, no retry allowed
 []r1=6 -> 0.99:(r1'=8) + 1-0.99:(r1'=7); //fail task at r1=7
 //travel to at3_7
 [r1travel_at3_7] r1=8->p_travel_r1at3_7:(r1'=10) + 1-p_travel_r1at3_7:(r1'=9);
 //try at3_7, no retry allowed
 []r1=10 -> 0.95:(r1'=12) + 1-0.95:(r1'=11); //fail task at r1=11
 //travel to at3_4
 [r1travel_at3_4] r1=12->p_travel_r1at3_4:(r1'=14) + 1-p_travel_r1at3_4:(r1'=13);
 //try at3_4, no retry allowed
 []r1=14 -> 0.95:(r1'=16) + 1-0.95:(r1'=15); //fail task at r1=15
 //travel to at3_10
 [r1travel_at3_10] r1=16->p_travel_r1at3_10:(r1'=18) + 1-p_travel_r1at3_10:(r1'=17);
 //try at3_10, no retry allowed
 []r1=18 -> 0.95:(r1'=20) + 1-0.95:(r1'=19); //fail task at r1=19
 //travel to at2_11
 [r1travel_at2_11] r1=20->p_travel_r1at2_11:(r1'=22) + 1-p_travel_r1at2_11:(r1'=21);
 //try at2_11, no retry allowed
 []r1=22 -> 0.95:(r1'=24) + 1-0.95:(r1'=23); //fail task at r1=23
 //travel to at2_8
 [r1travel_at2_8] r1=24->p_travel_r1at2_8:(r1'=26) + 1-p_travel_r1at2_8:(r1'=25);
 //try at2_8, no retry allowed
 []r1=26 -> 0.95:(r1'=28) + 1-0.95:(r1'=27); //fail task at r1=27
 //travel to at2_5
 [r1travel_at2_5] r1=28->p_travel_r1at2_5:(r1'=30) + 1-p_travel_r1at2_5:(r1'=29);
 //try at2_5, no retry allowed
 []r1=30 -> 0.95:(r1'=32) + 1-0.95:(r1'=31); //fail task at r1=31
endmodule


