dtmc

const double p_travel_r4at1_1=1.0 ;// from location: l4 (robot initial loc) to location: room1 (at1_1)
const double p_travel_r4at1_2=1.0 ;// from location: room1 (at1_1) to location: room6(at1_2)
const double p_travel_r5at1_1=1.0 ;// from location: l5 (robot initial loc) to location: room1 (at1_1)
const double p_travel_r5at1_2=1.0 ;// from location: room1 (at1_1) to location: room6(at1_2)
const double p_r4at1_1=0.97 ;
const double p_r4at1_2=0.97 ;
const double p_r5at1_1=0.98 ;
const double p_r5at1_2=0.98 ;

formula done=(r4=12&r5=12);

module r4
 r4:[0..12];
 //travel to at1_1
 [r4travel_at1_1] r4=0->p_travel_r4at1_1:(r4'=2) + 1-p_travel_r4at1_1:(r4'=1);
 //try at1_1, retry allowed 2 times
 []r4=2 -> 0.97:(r4'=6) + 1-0.97:(r4'=3);
 []r4=3 -> 0.97:(r4'=6) + 1-0.97:(r4'=4);
 []r4=4 -> 0.97:(r4'=6) + 1-0.97:(r4'=5); //fail task at r4=5
 //travel to at1_2
 [r4travel_at1_2] r4=6->p_travel_r4at1_2:(r4'=8) + 1-p_travel_r4at1_2:(r4'=7);
 //try at1_2, retry allowed 2 times
 []r4=8 -> 0.97:(r4'=12) + 1-0.97:(r4'=9);
 []r4=9 -> 0.97:(r4'=12) + 1-0.97:(r4'=10);
 []r4=10 -> 0.97:(r4'=12) + 1-0.97:(r4'=11); //fail task at r4=11
endmodule

module r5
 r5:[0..12];
 //travel to at1_1
 [r5travel_at1_1] r5=0->p_travel_r5at1_1:(r5'=2) + 1-p_travel_r5at1_1:(r5'=1);
 //try at1_1, retry allowed 2 times
 []r5=2 -> 0.98:(r5'=6) + 1-0.98:(r5'=3);
 []r5=3 -> 0.98:(r5'=6) + 1-0.98:(r5'=4);
 []r5=4 -> 0.98:(r5'=6) + 1-0.98:(r5'=5); //fail task at r5=5
 //travel to at1_2
 [r5travel_at1_2] r5=6->p_travel_r5at1_2:(r5'=8) + 1-p_travel_r5at1_2:(r5'=7);
 //try at1_2, retry allowed 2 times
 []r5=8 -> 0.98:(r5'=12) + 1-0.98:(r5'=9);
 []r5=9 -> 0.98:(r5'=12) + 1-0.98:(r5'=10);
 []r5=10 -> 0.98:(r5'=12) + 1-0.98:(r5'=11); //fail task at r5=11
endmodule


