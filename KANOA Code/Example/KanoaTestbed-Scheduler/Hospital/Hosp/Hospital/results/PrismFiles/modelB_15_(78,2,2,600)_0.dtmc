dtmc

const double p_travel_r3at4_9=1.0 ;// from location: l3 (robot initial loc) to location: room4 (at4_9)
const double p_travel_r3at2_11=1.0 ;// from location: room4 (at4_9) to location: room4(at2_11)
const double p_travel_r3at3_10=1.0 ;// from location: room4 (at2_11) to location: room4(at3_10)
const double p_travel_r3at4_12=1.0 ;// from location: room4 (at3_10) to location: room5(at4_12)
const double p_travel_r3at3_13=1.0 ;// from location: room5 (at4_12) to location: room5(at3_13)
const double p_travel_r3at2_14=1.0 ;// from location: room5 (at3_13) to location: room5(at2_14)
const double p_r3at4_9=0.99 ;
const double p_r3at2_11=0.99 ;
const double p_r3at3_10=0.99 ;
const double p_r3at4_12=0.99 ;
const double p_r3at3_13=0.99 ;
const double p_r3at2_14=0.99 ;

formula done=(r3=24);

module r3
 r3:[0..24];
 //travel to at4_9
 [r3travel_at4_9] r3=0->p_travel_r3at4_9:(r3'=2) + 1-p_travel_r3at4_9:(r3'=1);
 //try at4_9, no retry allowed
 []r3=2 -> 0.99:(r3'=4) + 1-0.99:(r3'=3); //fail task at r3=3
 //travel to at2_11
 [r3travel_at2_11] r3=4->p_travel_r3at2_11:(r3'=6) + 1-p_travel_r3at2_11:(r3'=5);
 //try at2_11, no retry allowed
 []r3=6 -> 0.99:(r3'=8) + 1-0.99:(r3'=7); //fail task at r3=7
 //travel to at3_10
 [r3travel_at3_10] r3=8->p_travel_r3at3_10:(r3'=10) + 1-p_travel_r3at3_10:(r3'=9);
 //try at3_10, no retry allowed
 []r3=10 -> 0.99:(r3'=12) + 1-0.99:(r3'=11); //fail task at r3=11
 //travel to at4_12
 [r3travel_at4_12] r3=12->p_travel_r3at4_12:(r3'=14) + 1-p_travel_r3at4_12:(r3'=13);
 //try at4_12, no retry allowed
 []r3=14 -> 0.99:(r3'=16) + 1-0.99:(r3'=15); //fail task at r3=15
 //travel to at3_13
 [r3travel_at3_13] r3=16->p_travel_r3at3_13:(r3'=18) + 1-p_travel_r3at3_13:(r3'=17);
 //try at3_13, no retry allowed
 []r3=18 -> 0.99:(r3'=20) + 1-0.99:(r3'=19); //fail task at r3=19
 //travel to at2_14
 [r3travel_at2_14] r3=20->p_travel_r3at2_14:(r3'=22) + 1-p_travel_r3at2_14:(r3'=21);
 //try at2_14, no retry allowed
 []r3=22 -> 0.99:(r3'=24) + 1-0.99:(r3'=23); //fail task at r3=23
endmodule


