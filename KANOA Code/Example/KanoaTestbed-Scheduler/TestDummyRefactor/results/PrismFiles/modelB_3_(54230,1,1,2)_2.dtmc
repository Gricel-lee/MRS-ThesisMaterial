dtmc

const double p_travel_r1at3_4=1.0 ;// from location: l1 (robot initial loc) to location: room2 (at3_4)
const double p_travel_r1at3_13=1.0 ;// from location: room2 (at3_4) to location: room5(at3_13)
const double p_travel_r1at3_7=1.0 ;// from location: room5 (at3_13) to location: room3(at3_7)
const double p_r1at3_4=0.99 ;
const double p_r1at3_13=0.99 ;
const double p_r1at3_7=0.99 ;

formula done=(r1=12);

module r1
 r1:[0..12];
 //travel to at3_4
 [r1travel_at3_4] r1=0->p_travel_r1at3_4:(r1'=2) + 1-p_travel_r1at3_4:(r1'=1);
 //try at3_4, no retry allowed
 []r1=2 -> 0.99:(r1'=4) + 1-0.99:(r1'=3); //fail task at r1=3
 //travel to at3_13
 [r1travel_at3_13] r1=4->p_travel_r1at3_13:(r1'=6) + 1-p_travel_r1at3_13:(r1'=5);
 //try at3_13, no retry allowed
 []r1=6 -> 0.99:(r1'=8) + 1-0.99:(r1'=7); //fail task at r1=7
 //travel to at3_7
 [r1travel_at3_7] r1=8->p_travel_r1at3_7:(r1'=10) + 1-p_travel_r1at3_7:(r1'=9);
 //try at3_7, no retry allowed
 []r1=10 -> 0.99:(r1'=12) + 1-0.99:(r1'=11); //fail task at r1=11
endmodule


